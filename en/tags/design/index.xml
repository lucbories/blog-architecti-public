<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on IT Architecture</title>
    <link>https://architecti.blog/en/tags/design/</link>
    <description>Recent content in Design on IT Architecture</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 24 Sep 2025 17:30:39 -0400</lastBuildDate>
    <atom:link href="https://architecti.blog/en/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Serverless Architecture: Revolutionizing Web Development Without Servers</title>
      <link>https://architecti.blog/en/articles/2025/010-architecture-serverless---r%C3%A9volutionner-le-d%C3%A9veloppement-web-sans-serveur/</link>
      <pubDate>Wed, 24 Sep 2025 17:30:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2025/010-architecture-serverless---r%C3%A9volutionner-le-d%C3%A9veloppement-web-sans-serveur/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;The term &amp;ldquo;serverless architecture&amp;rdquo; may raise a few questions—let’s demystify it.&lt;/p&gt;&#xA;&lt;p&gt;Serverless architecture is revolutionizing how modern applications are designed and deployed by offloading infrastructure management to cloud providers. Instead of provisioning, configuring, and maintaining dedicated servers or virtual machine clusters, development teams can focus on writing business logic. This paradigm directly addresses the agility and responsiveness demanded by today’s businesses, which aim to reduce time-to-market while optimizing operational costs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Microservices Architecture: Principles, Benefits, Challenges, and Use Cases</title>
      <link>https://architecti.blog/en/articles/2025/009-l-architecture-microservices--une-r%C3%A9volution-dans-la-conception-applicative/</link>
      <pubDate>Wed, 03 Sep 2025 16:45:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2025/009-l-architecture-microservices--une-r%C3%A9volution-dans-la-conception-applicative/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In recent years, software development has undergone a profound transformation in how applications are designed, deployed, and maintained. This shift is largely driven by the rise of microservices architecture, which stands in contrast to traditional monolithic systems. In a world where businesses must innovate quickly, adapt to changing user needs, and ensure high availability, microservices offer a flexible and scalable solution to modern challenges. Yet behind this promise lies a set of technical, organizational, and cultural decisions that deserve careful exploration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Fundamental Principles of Domain-Driven Design (DDD)</title>
      <link>https://architecti.blog/en/articles/2025/008-les-principes-fondamentaux-du-domain-driven-design-ddd/</link>
      <pubDate>Sun, 17 Aug 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2025/008-les-principes-fondamentaux-du-domain-driven-design-ddd/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;As software systems grow increasingly complex, it becomes essential to design architectures that accurately reflect business needs. That’s the core goal of &lt;strong&gt;Domain-Driven Design (DDD)&lt;/strong&gt;, an approach introduced by &lt;strong&gt;Eric Evans&lt;/strong&gt; in 2003 that places the &lt;strong&gt;business domain&lt;/strong&gt; at the heart of software design.&lt;/p&gt;&#xA;&lt;p&gt;DDD is more than a modeling method—it’s a &lt;strong&gt;design philosophy&lt;/strong&gt; that deeply influences application architecture by guiding component structure, responsibility definition, and system communication.&lt;/p&gt;&#xA;&lt;p&gt;This article explores the &lt;strong&gt;10 fundamental principles of DDD&lt;/strong&gt;, with concrete examples and architectural impacts, especially in &lt;strong&gt;microservices&lt;/strong&gt; contexts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Application Architecture: Designing Robust and Adaptable Systems</title>
      <link>https://architecti.blog/en/articles/2025/003-architecture-applicative---concevoir-des-syst%C3%A8mes-robustes-et-adaptables/</link>
      <pubDate>Fri, 07 Mar 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2025/003-architecture-applicative---concevoir-des-syst%C3%A8mes-robustes-et-adaptables/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In a constantly evolving digital landscape, user requirements and technological constraints proliferate. A thoughtful application architecture does more than organize code: it defines a holistic strategy to decouple responsibilities and optimize performance, scalability, and resilience. This engineering discipline is essential for organizations aiming to stay competitive and agile.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;foundations-and-definitions&#34;&gt;Foundations and Definitions&lt;/h2&gt;&#xA;&lt;p&gt;Application architecture encompasses the rules, components, and interfaces that structure an application. It includes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Separation of Concerns&lt;/strong&gt;: Breaking the application into modules or layers with clear responsibilities to simplify understanding, testing, and maintenance.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Modularity&lt;/strong&gt;: Designing independent, reusable components that can be deployed and updated in isolation.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Design Patterns&lt;/strong&gt;: Applying proven models—such as Model-View-Controller, layered architectures, or microservices—to standardize and streamline software structure.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Together, these principles enable flexible environments where technical evolution and functional changes integrate smoothly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Application Architecture – Context</title>
      <link>https://architecti.blog/en/articles/2025/002-architecture-applicative---mise-en-contexte/</link>
      <pubDate>Wed, 05 Feb 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2025/002-architecture-applicative---mise-en-contexte/</guid>
      <description>&lt;h2 id=&#34;are-you-concerned-with-application-architecture&#34;&gt;Are You Concerned with Application Architecture?&lt;/h2&gt;&#xA;&lt;p&gt;If you’re a developer, you want to understand how application components interact; how a particular application workflow should run and what results to expect; and how an end user should engage with an input or display screen.&lt;/p&gt;&#xA;&lt;p&gt;If you’re an infrastructure specialist, you need to know the type and volume of data stored and transferred; the frequency and load each application process demands; and how different application solutions fit together within the information system (IS).&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS vs Azure</title>
      <link>https://architecti.blog/en/articles/2021/006-aws-vs-azure/</link>
      <pubDate>Fri, 04 Jun 2021 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2021/006-aws-vs-azure/</guid>
      <description>&lt;h2 id=&#34;opinion--comparing-the-cloud-computing-giants&#34;&gt;Opinion – Comparing the Cloud Computing Giants&lt;/h2&gt;&#xA;&lt;p&gt;KINSTA is an American WordPress hosting provider that publishes in-depth blog articles on various themes. While reading “AWS vs Azure in 2021 (Comparing the Cloud Computing Giants),” I discovered several interesting insights to share.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cloud-computing-players&#34;&gt;Cloud Computing Players&lt;/h2&gt;&#xA;&lt;p&gt;The rapid growth in cloud demand has spawned an exponential increase in services and options. The broader your target, the more use cases you must support and the more products you need to offer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Differences Between TOGAF and ArchiMate</title>
      <link>https://architecti.blog/en/articles/2021/003-diff%C3%A9rences-entre-togaf-et-archimate/</link>
      <pubDate>Fri, 05 Mar 2021 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2021/003-diff%C3%A9rences-entre-togaf-et-archimate/</guid>
      <description>&lt;p&gt;Answering the question of the differences between TOGAF and ArchiMate is not straightforward, but here’s what you need to know.&lt;/p&gt;&#xA;&lt;p&gt;Most organizations today are embarking on or renewing their enterprise architecture practices. Is yours part of that trend?&lt;/p&gt;&#xA;&lt;p&gt;If so, you’re not alone—many enterprise architects are confused by the distinctions between TOGAF and ArchiMate. While there are overlaps, each standard serves a distinct purpose. Which one should you learn first?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Which Application Architecture to Choose</title>
      <link>https://architecti.blog/en/articles/2021/001-quelle-architecture-applicative-choisir/</link>
      <pubDate>Tue, 05 Jan 2021 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2021/001-quelle-architecture-applicative-choisir/</guid>
      <description>&lt;p&gt;Choosing an Application Architecture is a pivotal decision impacting team structure, workflows, technology choices, skill requirements, and interactions with internal users, clients, and partners. So, which application architecture in 2021?&lt;/p&gt;&#xA;&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;&#xA;&lt;p&gt;This article focuses not on technology vendors or platforms but on architectural choices. Given the multitude of technical solutions across diverse scenarios, covering them all in one piece is impossible. Future posts will address specific technologies, which are equally important.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Solution Architecture – Designing Around a Specific Problem</title>
      <link>https://architecti.blog/en/articles/2020/004-architecture-de-solution--conception-autour-dune-probl%C3%A9matique-pr%C3%A9cise/</link>
      <pubDate>Sat, 05 Dec 2020 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2020/004-architecture-de-solution--conception-autour-dune-probl%C3%A9matique-pr%C3%A9cise/</guid>
      <description>&lt;p&gt;Solution Architecture is the least well-defined component of Enterprise Architecture. In other words, the same term can encompass activities with differing scopes. Yet demand for Solution Architects continues to grow, highlighting the role’s rising importance. Let’s clarify its contours.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-solution-architecture&#34;&gt;What Is Solution Architecture?&lt;/h2&gt;&#xA;&lt;p&gt;According to Gartner, Solution Architecture is the architectural description of a specific solution—a coherent and sufficient set of features that addresses a defined set of requirements.&lt;/p&gt;&#xA;&lt;p&gt;The Scaled Agile Framework (SAFe) describes Solution Architecture as defining and communicating a shared architectural and technical vision for work in progress.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Technology Architecture or Technical Architecture vs Technical Expertise</title>
      <link>https://architecti.blog/en/articles/2020/002-architecture-technologique-ou-architecture-technique-vs-expertise-technique/</link>
      <pubDate>Mon, 12 Oct 2020 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/en/articles/2020/002-architecture-technologique-ou-architecture-technique-vs-expertise-technique/</guid>
      <description>&lt;p&gt;Beyond the terms that may vary from one organization or methodology to another, it’s essential to understand what defines Technology Architecture (or Technical Architecture) and what distinguishes it from Technical Expertise.&lt;/p&gt;&#xA;&lt;p&gt;It’s therefore necessary to separate governance roles from implementation roles. Both are crucial, and individuals can navigate between them over the course of a career.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Within Enterprise Architecture, Technology Architecture focuses on functionality—data persistence, executing workloads tied to a business process, and so on. Its goal is to organize, standardize, and govern the use of technologies in implementing the Application Architecture.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
