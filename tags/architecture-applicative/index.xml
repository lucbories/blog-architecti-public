<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture Applicative on ArchitecTI</title>
    <link>https://architecti.blog/tags/architecture-applicative/</link>
    <description>Recent content in Architecture Applicative on ArchitecTI</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <lastBuildDate>Sun, 05 Oct 2025 07:30:39 -0400</lastBuildDate>
    <atom:link href="https://architecti.blog/tags/architecture-applicative/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comparaison entre architecture en couches (Layered) et architecture hexagonale (Ports &amp; Adapters)</title>
      <link>https://architecti.blog/articles/2025/012-comparaison-entre-architecture-en-couches-et-hexagonale/</link>
      <pubDate>Sun, 05 Oct 2025 07:30:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/012-comparaison-entre-architecture-en-couches-et-hexagonale/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Dans le paysage de la conception logicielle, l’architecture en couches et l’architecture hexagonale (Ports &amp;amp; Adapters) figurent parmi les modèles les plus emblématiques. Toutes deux cherchent à structurer les applications de manière modulaire, à séparer les responsabilités et à faciliter la maintenance, mais leurs approches diffèrent profondément. L’architecture en couches repose sur une hiérarchie fixe de composants empilés les uns sur les autres, tandis que l’architecture hexagonale définit un noyau métier entouré de ports et de connecteurs techniques. Comprendre ces différences est essentiel pour choisir le style le plus adapté aux besoins fonctionnels, aux contraintes de performance et à l’évolution future d’un projet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture Monolithique : Fondations, Forces et Limites d’un Style Classique</title>
      <link>https://architecti.blog/articles/2025/011-architecture-monolithique---fondations-forces-et-limites/</link>
      <pubDate>Sun, 28 Sep 2025 07:30:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/011-architecture-monolithique---fondations-forces-et-limites/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;L’architecture monolithique représente l’un des styles les plus anciens et les plus répandus dans le développement logiciel. Elle est souvent perçue comme le point de départ naturel pour de nombreuses applications, notamment dans les contextes où la simplicité, la rapidité de mise en œuvre et la cohérence sont des priorités. Bien que les architectures modernes telles que les microservices ou le serverless aient gagné en popularité, le monolithe conserve une pertinence certaine dans de nombreux cas d’usage. Cet article propose une exploration approfondie de ce style architectural, en mettant en lumière ses caractéristiques, ses avantages, ses limites et ses différences avec les autres approches.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture Serverless : Révolutionner le Développement Web sans Serveur</title>
      <link>https://architecti.blog/articles/2025/010-architecture-serverless---r%C3%A9volutionner-le-d%C3%A9veloppement-web-sans-serveur/</link>
      <pubDate>Wed, 24 Sep 2025 17:30:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/010-architecture-serverless---r%C3%A9volutionner-le-d%C3%A9veloppement-web-sans-serveur/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Le terme d’architecture serverless, ou architecture sans serveur en traduction littérale, peut amener un certain nombre de questions, nous allons tâcher de le démystifier.&lt;/p&gt;&#xA;&lt;p&gt;L’architecture serverless révolutionne la manière dont les applications modernes sont conçues et déployées, en déléguant la gestion des infrastructures sous-jacentes aux fournisseurs de cloud. Plutôt que de provisionner, configurer et maintenir des serveurs dédiés ou des clusters de machines virtuelles, les équipes de développement peuvent se concentrer sur l’écriture du code métier. Ce paradigme répond directement aux défis de l’agilité et de la réactivité requises par les entreprises d’aujourd’hui, qui cherchent à réduire les délais de mise sur le marché tout en optimisant leurs coûts opérationnels.&lt;/p&gt;</description>
    </item>
    <item>
      <title>L’architecture Microservices : une révolution dans la conception applicative</title>
      <link>https://architecti.blog/articles/2025/009-l-architecture-microservices--une-r%C3%A9volution-dans-la-conception-applicative/</link>
      <pubDate>Wed, 03 Sep 2025 16:45:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/009-l-architecture-microservices--une-r%C3%A9volution-dans-la-conception-applicative/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Depuis plusieurs années, le monde du développement logiciel connaît une transformation profonde dans la manière de concevoir, déployer et maintenir les applications. Cette évolution est en grande partie portée par l’émergence du style architectural des microservices, qui s’oppose aux architectures monolithiques traditionnelles. Dans un contexte où les entreprises doivent innover rapidement, s’adapter aux besoins changeants des utilisateurs et garantir une haute disponibilité, les microservices apparaissent comme une réponse agile et scalable aux défis contemporains. Mais derrière cette promesse se cachent des choix techniques, organisationnels et culturels qui méritent d’être explorés en profondeur.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Les Principes Fondamentaux du Domain-Driven Design (DDD)</title>
      <link>https://architecti.blog/articles/2025/008-les-principes-fondamentaux-du-domain-driven-design-ddd/</link>
      <pubDate>Sun, 17 Aug 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/008-les-principes-fondamentaux-du-domain-driven-design-ddd/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Dans un monde où les systèmes logiciels deviennent de plus en plus complexes, il est essentiel de concevoir des architectures qui reflètent fidèlement les besoins métier. C’est précisément l’objectif du &lt;strong&gt;Domain-Driven Design (DDD)&lt;/strong&gt;, une approche introduite par &lt;strong&gt;Eric Evans&lt;/strong&gt; en 2003, qui place le &lt;strong&gt;domaine métier&lt;/strong&gt; au cœur de la conception logicielle.&lt;/p&gt;&#xA;&lt;p&gt;Mais DDD n’est pas qu’une méthode de modélisation. C’est une philosophie qui influence profondément l’&lt;strong&gt;architecture applicative&lt;/strong&gt;, en guidant la structuration des composants, la définition des responsabilités, et la communication entre les parties du système.&lt;/p&gt;</description>
    </item>
    <item>
      <title>L’architecture applicative moderne : moteur de la transformation numérique</title>
      <link>https://architecti.blog/articles/2025/005-l-architecture-applicative-moderne---moteur-de-la-transformation-num%C3%A9rique/</link>
      <pubDate>Wed, 14 May 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/005-l-architecture-applicative-moderne---moteur-de-la-transformation-num%C3%A9rique/</guid>
      <description>&lt;h2 id=&#34;introduction--larchitecture-applicative-au-cœur-de-la-révolution-numérique&#34;&gt;Introduction : L’architecture applicative au cœur de la révolution numérique**&lt;/h2&gt;&#xA;&lt;p&gt;Dans un monde où l’innovation technologique redéfinit chaque secteur, la transformation numérique n’est plus une option — c’est une nécessité stratégique. Mais derrière les interfaces élégantes et les expériences utilisateurs fluides se cache un pilier souvent invisible mais fondamental : l’architecture applicative. Véritable colonne vertébrale des systèmes d’information modernes, elle conditionne la capacité d’une entreprise à évoluer, à innover et à répondre aux exigences d’un marché en perpétuelle mutation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comprendre le Bounded Context en Architecture Microservices</title>
      <link>https://architecti.blog/articles/2025/004-comprendre-le-bounded-context-en-architecture-microservices/</link>
      <pubDate>Sat, 05 Apr 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/004-comprendre-le-bounded-context-en-architecture-microservices/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;L’architecture microservices a révolutionné la manière dont les systèmes logiciels sont conçus, développés et maintenus. Elle repose sur le principe de décomposer une application monolithique en une série de services indépendants, chacun responsable d’un domaine fonctionnel bien défini. Mais cette décomposition soulève une question cruciale : &lt;strong&gt;comment définir les limites de chaque service ?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;C’est là qu’intervient le concept de &lt;strong&gt;bounded context&lt;/strong&gt;, issu de la méthodologie &lt;strong&gt;&lt;a href=&#34;https://architecti.blog/articles/2025/les-principes-fondamentaux-du-domain-driven-design-ddd/&#34;&gt;Domain-Driven Design (DDD)&lt;/a&gt;&lt;/strong&gt;. Ce concept permet de structurer les microservices autour de modèles métier cohérents, en évitant les ambiguïtés et les dépendances inutiles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture Applicative : Concevoir des Systèmes Robustes et Adaptables</title>
      <link>https://architecti.blog/articles/2025/003-architecture-applicative---concevoir-des-syst%C3%A8mes-robustes-et-adaptables/</link>
      <pubDate>Fri, 07 Mar 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/003-architecture-applicative---concevoir-des-syst%C3%A8mes-robustes-et-adaptables/</guid>
      <description>&lt;p&gt;L&amp;rsquo;architecture applicative constitue l&amp;rsquo;épine dorsale des systèmes informatiques modernes. Elle détermine la structure organisationnelle et la répartition fonctionnelle d&amp;rsquo;une application, de la conception initiale jusqu&amp;rsquo;à la mise en production. Dans cet article, nous explorerons en profondeur les fondements, les modèles et les bonnes pratiques permettant de créer des applications évolutives et maintenables.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Dans un monde numérique en constante évolution, les exigences des utilisateurs et les contraintes technologiques se multiplient. Pour répondre à ces défis, une architecture applicative bien pensée ne se contente pas de structurer du code ; elle définit la stratégie globale permettant de découpler les responsabilités et d’optimiser les performances, la scalabilité et la résilience des systèmes. Ce travail d’ingénierie est aujourd’hui incontournable pour les entreprises souhaitant rester compétitives et agiles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Architecture Applicative - Mise en contexte</title>
      <link>https://architecti.blog/articles/2025/002-architecture-applicative---mise-en-contexte/</link>
      <pubDate>Wed, 05 Feb 2025 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2025/002-architecture-applicative---mise-en-contexte/</guid>
      <description>&lt;h2 id=&#34;êtes-vous-concerné-par-larchitecture-applicative&#34;&gt;Êtes-vous concerné par l’Architecture Applicative?&lt;/h2&gt;&#xA;&lt;p&gt;Si vous êtes développeur vous aimeriez comprendre comment les éléments applicatifs interagissent entre eux; comment doit fonctionner un traitement applicatif particulier, avec quels résultats attendus; de quelle manière un utilisateur doit utiliser un écran de saisie ou de consultation.&lt;/p&gt;&#xA;&lt;p&gt;Si vous êtes spécialiste infrastructure, vous avez besoin de connaître la nature et la volumétrie des données stockées et échangées; la fréquence et la charge requise par chaque traitement applicatif; l’agencement des différentes solutions applicatives entre elles au sein du système d’information (SI).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quelle Architecture Applicative choisir</title>
      <link>https://architecti.blog/articles/2021/001-quelle-architecture-applicative-choisir/</link>
      <pubDate>Tue, 05 Jan 2021 21:07:39 -0400</pubDate>
      <guid>https://architecti.blog/articles/2021/001-quelle-architecture-applicative-choisir/</guid>
      <description>&lt;p&gt;Le choix d’une Architecture Applicative est une décision déterminante en ce qui concerne l’organisation des équipes, les méthodes de travail, les technologies à utiliser, les compétences à acquérir, les interactions avec les utilisateurs internes, les clients et les partenaires… Alors quelle architecture applicative en 2021?&lt;/p&gt;&#xA;&lt;h2 id=&#34;préambule&#34;&gt;Préambule&lt;/h2&gt;&#xA;&lt;p&gt;Cet article n’est pas orienté sur des choix technologiques ou des fournisseurs mais plus sur des choix architecturaux. En effet, il existe tellement de solutions techniques existantes dans tellement de cas de figure différents que nous ne pourrons pas en faire le tour avec un seul écrit. De futurs articles traiteront donc des sujets technologiques qui sont tout aussi importants.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
