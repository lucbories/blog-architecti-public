


[{"content":"La transformation numérique n’est pas un concept nouveau. Ces dernières années ont vu l’évolution rapide des technologies dans les entreprises, de l’Internet des objets (IoT) et de la blockchain aux chatbots, en passant par l’apprentissage automatique et la réalité virtuelle. Presque toutes les entreprises sont impliquées dans une forme de transformation numérique, mais combien en voient réellement les bénéfices ?\nDans cet article, nous aborderons certains des mythes courants liés à la transformation numérique. Même si presque toutes les entreprises sont impliquées dans une forme de transformation numérique, elles n’en tirent pas toutes avantage. Une nouvelle analyse de Bain and Company a révélé que moins de 10% des entreprises mondiales ont été capables d’atteindre leurs résultats prévisionnels grâce à leurs investissements dans la technologie numérique. En d’autres termes, plus de 90 % des entreprises ont encore du mal à tenir la promesse d’un modèle commercial basé sur la technologie.\nUne transformation réussie est compliquée et s’appuie sur l’alignement de la technologie et des fonctionnalités de l’entreprise, l’intégration de nouvelles technologies avec les technologies existantes et l’innovation dans des domaines parfois peu à l’aise avec le risque.\nEn considérant le numérique comme un catalyseur, comme une alternative à un objectif final, les entrepreneurs peuvent mieux décider comment leur technique de transformation numérique affecte l’expérience client, en plus de générer des gains de revenus et d’efficacité.\nSi tel est le cas, la transformation numérique est une solution pour votre entreprise. Selon des recherches récentes, plus de 40 % des entreprises dans le monde incluent la numérisation de leur stratégie commerciale. Voyons quels sont les mythes courants sur cette transformation numérique.\n1. La transformation numérique ne concerne que la technologie. # La technologie est certes essentielle, mais la transformation ne se résume pas qu’à elle. La transformation n’est pas seulement une mise à niveau logicielle ou un projet d’amélioration de la chaîne d’approvisionnement. La transformation concerne en fait votre entreprise et la façon dont votre objectif, votre stratégie et vos progrès survivront au milieu d’un changement radical d’attentes de la part des clients, des travailleurs et des partenaires.\nUne transformation comme la 5G peut certainement éclairer et guider votre flux de travail, mais le fait est qu’un flux de travail bien conçu, intentionnel, lié à l’entreprise, présent avec les tendances technologiques et surtout destiné à rendre votre entreprise plus efficace peut également résister aux principales perturbations.\nLa mise en œuvre de la transformation numérique devrait avoir un impact sur des mesures réelles telles que le chiffre d’affaires, les profits, les coûts, l’engagement client, la rétention ou la répétition des achats. Et donc influencer l’entreprise de manière positive. La transformation consiste à positionner stratégiquement l’entreprise pour être concurrentielle à l’ère numérique et faire face aux nouvelles réalités du marché.\nSi vous devez diriger la transition technologique de votre organisation, la première étape consiste à prendre la mesure des réalités de la transformation numérique. Et non de vous laisser séduire par le battage médiatique.\n2. La transformation est un projet isolé et ponctuel qui suit une approche constante et nécessite un changement à l’échelle de l’entreprise. # L’un des mythes les plus importants entourant la transformation numérique est qu’il s’agit d’un projet isolé et ponctuel. Pour qu’une initiative de transformation numérique réussisse, elle doit être une entreprise à l’échelle de l’entreprise avec la participation des parties prenantes de l’ensemble de l’organisation. Les spécialistes du marketing ne réussiront dans leur transformation numérique que s’ils comprennent vraiment les besoins de leurs clients et construisent des expériences numériques autour de cette perception.\nCe mythe nous fait penser que la transformation numérique nécessite une transition vers le numérique à l’échelle de toute l’organisation. Ce n’est pas le cas: toutes les parties prenantes de l’ensemble de l’organisation doivent être concernées, mais toutes les opérations des départements n’ont pas besoin de passer au numérique.\nConstruire une stratégie digitale efficace commence par évaluer le marché, ainsi que l’organisation et ses objectifs. Cela fournira les données nécessaires pour déterminer où dépenser de l’argent dans le numérique et la meilleure façon de tirer profit de ces investissements. Dans certains cas, il existe des processus non numériques dans une organisation qui fonctionnent assez bien et peuvent ne pas justifier d’être numérisés.\n3. Nous avons déjà une bonne stratégie numérique # La transformation numérique est le processus par lequel les entreprises se transforment radicalement pour mieux répondre aux attentes et aux désirs des clients. Par changement radical, j’entends tout changer fondamentalement : les systèmes orientés clients et employés ; processus d’affaires; produits et services; même la marque.\n90 % des entreprises pensent avoir mis en place une stratégie numérique, mais seulement 14 % disposent de la technologie et des compétences nécessaires pour mettre en œuvre cette stratégie. De plus, peu d’entreprises abordent efficacement leurs stratégies numériques.\nSeuls 25 % ont cartographié le parcours client – une étape importante pour la transformation – et seuls 42 % investissent dans les canaux digitaux. En réalité, près de 90 % des DSI de la dernière enquête ont admis qu’un projet de transformation numérique avait échoué, avait été retardé ou avait une portée réduite.\nLa mise en œuvre de la transformation numérique par morceaux ne nécessite pas de nettoyer l’univers des données dans toute l’organisation (bien que ce soit le mieux) ou d’avoir des datamarts absolument solides qui sont simplement accessibles/relationnels/modifiables/IAM, et ainsi de suite. Ceci est diversement appelé transformation numérique ou transformation d’entreprise basée sur la technologie, mais quelle que soit l’étiquette, les leaders technologiques sont au centre.\n4. La transformation numérique est une « chose » distincte qui s’ajoute à votre modèle commercial existant. # La transformation ne consiste pas simplement à ajouter une technologie supplémentaire à votre stratégie actuelle, un projet parallèle pour votre service informatique. Par exemple, les technologies basées sur le cloud et les services par abonnement sont de bons catalyseurs de la transformation numérique ; ils sont abordables et les entreprises de toutes tailles peuvent les utiliser sans se ruiner.\nPour lancer une transformation numérique des processus d’entreprise, il est essentiel de modéliser délibérément ces processus avec des outils permettant des simulations inventives et empiriques. La transformation est un processus continu ; celui qui peut nécessiter des changements pour maintenir le succès. Un architecte d’entreprise est une personne chargée de votre entreprise au quotidien.\nEn raison du rôle qu’ils jouent, les Architectes d’Entreprise sont également un élément essentiel de la transformation et de la stratégie numériques de votre entreprise.\nConclusion # Si vous comprenez ces mythes, vous serez moins susceptible d’être la proie du battage médiatique sur la transformation et d’être plus conscient de la difficulté du processus. Éliminer ces mythes et obtenir une vision transparente de ce qui est requis pour la transformation est important pour le succès.\n","date":"13 août 2025","externalUrl":null,"permalink":"/posts/4-mythes-sur-la-transformation-num%C3%A9rique/","section":"Posts","summary":"\u003cp\u003eLa transformation numérique n’est pas un concept nouveau. Ces dernières années ont vu l’évolution rapide des technologies dans les entreprises, de l’Internet des objets (IoT) et de la blockchain aux chatbots, en passant par l’apprentissage automatique et la réalité virtuelle. Presque toutes les entreprises sont impliquées dans une forme de transformation numérique, mais combien en voient réellement les bénéfices ?\u003c/p\u003e\n\u003cp\u003eDans cet article, nous aborderons certains des mythes courants liés à la transformation numérique. Même si presque toutes les entreprises sont impliquées dans une forme de transformation numérique, elles n’en tirent pas toutes avantage. Une nouvelle analyse de Bain and Company a révélé que moins de 10% des entreprises mondiales ont été capables d’atteindre leurs résultats prévisionnels grâce à leurs investissements dans la technologie numérique. En d’autres termes, plus de 90 % des entreprises ont encore du mal à tenir la promesse d’un modèle commercial basé sur la technologie.\u003c/p\u003e","title":"4 Mythes Sur La Transformation Numérique","type":"posts"},{"content":"Je suis ingénieur TI ayant exercé des rôles d\u0026rsquo;expertise technique, de conseil, de projet et d\u0026rsquo;architecture d\u0026rsquo;intégration et d\u0026rsquo;architecture de solution applicative. Bonne lecture.\n","date":"13 août 2025","externalUrl":null,"permalink":"/","section":"ArchitecTI le blog sur l'architecture TI","summary":"\u003cp\u003eJe suis ingénieur TI ayant exercé des rôles d\u0026rsquo;expertise technique, de conseil, de projet et d\u0026rsquo;architecture d\u0026rsquo;intégration et d\u0026rsquo;architecture de solution applicative. Bonne lecture.\u003c/p\u003e","title":"ArchitecTI le blog sur l'architecture TI","type":"page"},{"content":"","date":"13 août 2025","externalUrl":null,"permalink":"/tags/architecture-dentreprise/","section":"Tags","summary":"","title":"Architecture D'Entreprise","type":"tags"},{"content":"","date":"13 août 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"13 août 2025","externalUrl":null,"permalink":"/tags/strat%C3%A9gie/","section":"Tags","summary":"","title":"Stratégie","type":"tags"},{"content":"","date":"13 août 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"13 août 2025","externalUrl":null,"permalink":"/tags/transformation-num%C3%A9rique/","section":"Tags","summary":"","title":"Transformation Numérique","type":"tags"},{"content":" Les méthodologies de travail en informatique – de la cascade à l’agilité # Pendant des décennies, la gestion de projet informatique s’est appuyée sur des méthodologies structurées et séquentielles, dont la plus emblématique est sans doute la méthode en cascade. Ce modèle repose sur une progression linéaire des étapes du projet : on commence par une analyse détaillée des besoins, suivie d’une phase de conception, puis de développement, de tests, et enfin de déploiement et de maintenance. Chaque étape doit être achevée avant de passer à la suivante, ce qui confère au processus une certaine rigueur et une visibilité appréciable sur les délais et les coûts.\nCependant, cette approche présente des limites importantes, notamment en matière de flexibilité. Dans un environnement technologique en constante évolution, les besoins des utilisateurs changent rapidement, et le modèle en cascade peine à s’adapter à ces variations. Les erreurs ou les incompréhensions ne sont souvent détectées qu’à la fin du cycle, ce qui peut entraîner des retards coûteux et une insatisfaction du client.\nFace à ces contraintes, la méthodologie agile a émergé comme une alternative plus souple et plus réactive. Popularisée au début des années 2000 avec la publication du Manifeste Agile, cette approche valorise la collaboration, l’adaptation au changement et la livraison fréquente de fonctionnalités opérationnelles. Contrairement à la cascade, l’agilité repose sur des cycles courts et itératifs, appelés sprints, au cours desquels les équipes développent, testent et livrent des incréments du produit.\nParmi les méthodes agiles les plus répandues, on retrouve Scrum, qui structure le travail autour de rôles bien définis (Product Owner, Scrum Master, équipe de développement) et de rituels réguliers (réunions quotidiennes, revues de sprint, rétrospectives). Kanban, quant à lui, privilégie la visualisation du flux de travail et la limitation du nombre de tâches en cours, tandis qu’Extreme Programming (XP) met l’accent sur les bonnes pratiques de développement comme les tests automatisés et l’intégration continue.\nSi l’agilité séduit par sa capacité à répondre rapidement aux besoins changeants, elle n’est pas exempte de défis. Elle demande une forte implication des parties prenantes, une culture de la transparence et une capacité à travailler en équipe de manière autonome. Dans certains contextes, notamment les projets complexes ou réglementés, une approche hybride peut s’avérer plus pertinente. Des modèles comme SAFe (Scaled Agile Framework) ou Disciplined Agile Delivery (DAD) cherchent justement à adapter les principes agiles aux réalités des grandes organisations, en combinant souplesse et rigueur.\nAinsi, le paysage des méthodologies de travail en informatique s’est considérablement enrichi, offrant aux entreprises une palette d’approches qu’elles peuvent moduler selon leurs besoins, leur culture et leurs contraintes.\nL’engouement pour la méthodologie agile – entre promesse et idéalisation # L’arrivée de l’agilité dans le monde de l’informatique a été perçue comme une véritable révolution. Elle promettait de résoudre les frustrations liées aux méthodes traditionnelles, en mettant l’accent sur la satisfaction du client, la rapidité de livraison et la qualité du produit. Dans un contexte de transformation numérique accélérée, cette promesse a trouvé un écho puissant auprès des entreprises soucieuses de rester compétitives et innovantes.\nTrès vite, l’agilité est devenue un mot-clé incontournable dans les discours managériaux. Les organisations ont entrepris des transformations profondes pour intégrer cette nouvelle philosophie : elles ont restructuré leurs équipes en \u0026ldquo;squads\u0026rdquo;, créé des rôles spécifiques comme celui de Scrum Master ou de Product Owner, et adopté des rituels agiles censés favoriser la collaboration et l’amélioration continue. Les espaces de travail ont été réaménagés pour encourager les échanges informels, et les outils numériques ont été déployés pour faciliter la gestion des tâches et le suivi des projets.\nCet engouement s’est accompagné d’un véritable marché de la formation et du conseil en agilité. Les certifications se sont multipliées, les consultants spécialisés ont fleuri, et les entreprises ont investi massivement dans l’accompagnement au changement. L’agilité est devenue un symbole de modernité, parfois même un argument marketing.\nMais derrière cette dynamique, se cache une réalité plus complexe. L’agilité repose sur des principes exigeants, qui ne peuvent être appliqués efficacement que si l’organisation est prête à remettre en question ses habitudes, ses hiérarchies et ses modes de fonctionnement. Elle suppose une culture de la confiance, de la transparence et de l’autonomie, qui ne s’installe pas du jour au lendemain. Elle demande également une implication forte des clients, qui doivent être disponibles pour fournir du feedback régulier et participer activement à la définition du produit.\nEn somme, l’agilité ne se limite pas à une série de pratiques ou de rôles : c’est une transformation culturelle profonde, qui nécessite du temps, de l’engagement et une réelle volonté de changement.\nLes mauvais usages de l’agilité et les difficultés rencontrées # Malheureusement, dans de nombreuses organisations, l’agilité a été adoptée de manière superficielle, voire caricaturale. On parle alors d’\u0026ldquo;agilité de façade\u0026rdquo;, ou d’\u0026ldquo;Agile Washing\u0026rdquo;, pour désigner ces entreprises qui se contentent de reproduire les rituels agiles sans en comprendre les fondements. Les réunions quotidiennes deviennent des obligations chronométrées sans réelle valeur, les sprints sont lancés sans objectifs clairs, et les rôles comme celui de Product Owner sont confiés à des personnes sans pouvoir décisionnel.\nCe type d’application dévoyée conduit souvent à une désillusion. Les équipes se sentent surchargées, les livraisons sont précipitées, et le client ne perçoit pas les bénéfices attendus. L’agilité, censée apporter de la fluidité et de la cohérence, devient source de confusion et de frustration.\nLes obstacles à une mise en œuvre réussie de l’agilité sont nombreux. Ils sont d’abord culturels : dans les organisations fortement hiérarchisées, la délégation de responsabilité et la prise de décision collective peuvent être mal perçues. La peur du changement, le manque de confiance entre les parties prenantes et la difficulté à sortir d’un modèle de contrôle centralisé freinent la dynamique agile.\nLes défis sont également pratiques. L’estimation des charges, par exemple, pose problème lorsque les équipes passent d’une logique de jours/hommes à une évaluation en points de complexité. La gestion des dépendances entre équipes ou entre composants techniques peut ralentir les sprints et compromettre la livraison continue. La réduction de la documentation, souvent prônée par les méthodes agiles, peut poser des difficultés en matière de maintenance ou de conformité réglementaire. Enfin, certains clients ne sont pas prêts à s’impliquer régulièrement ou à accepter des livraisons incrémentales, ce qui limite l’efficacité du processus.\nIl arrive même que des projets agiles échouent, malgré une mise en œuvre rigoureuse des pratiques. Ces échecs sont souvent liés à une mauvaise compréhension des enjeux, à une application trop dogmatique des méthodes, ou à une pression excessive sur les équipes. L’agilité, loin d’être une solution miracle, est un cadre de travail qui doit être adapté, compris et soutenu par l’ensemble de l’organisation.\nL’avenir de la gestion de projet – vers une agilité raisonnée # Après plus de vingt ans d’expérimentation, les entreprises commencent à tirer des leçons de leurs expériences agiles. Elles comprennent que l’agilité ne peut pas être imposée de manière uniforme, mais qu’elle doit être adaptée au contexte, à la nature du projet et à la maturité de l’organisation. Les retours d’expérience montrent que l’agilité fonctionne particulièrement bien dans des environnements stables, collaboratifs et ouverts à l’expérimentation.\nL’avenir de la gestion de projet semble s’orienter vers une approche plus nuancée, plus contextualisée. Plutôt que de choisir entre cascade et agilité, les organisations combinent les deux selon les besoins. Elles adoptent des modèles hybrides, qui permettent de planifier rigoureusement certaines phases tout en conservant la souplesse nécessaire à l’innovation. Elles valorisent l’intelligence collective, la co-construction et la capacité à apprendre en continu.\nLes nouvelles technologies jouent également un rôle clé dans cette évolution. L’intelligence artificielle, l’automatisation et les outils collaboratifs transforment la manière dont les projets sont pilotés. Les équipes disposent désormais de plateformes intégrées qui facilitent la planification, le suivi, la communication et la prise de décision. Ces outils renforcent les capacités des équipes agiles, tout en exigeant une montée en compétence et une adaptation des pratiques.\nEnfin, l’agilité de demain devra être durable et humaine. Elle ne peut pas se résumer à une course à la livraison ou à une pression constante sur les équipes. Elle doit intégrer des préoccupations de bien-être, d’inclusion, de responsabilité sociale et environnementale. Elle doit permettre aux individus de s’épanouir, de collaborer et de créer du sens.\nEn conclusion, l’agilité a profondément transformé la gestion de projet informatique, mais son application reste complexe et exigeante. Pour en tirer pleinement parti.\n","date":"12 août 2025","externalUrl":null,"permalink":"/posts/la-difficult%C3%A9-dappliquer-la-m%C3%A9thodologie-agile-dans-les-projets-informatiques/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eLes méthodologies de travail en informatique – de la cascade à l’agilité \n    \u003cdiv id=\"les-méthodologies-de-travail-en-informatique--de-la-cascade-à-lagilité\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#les-m%c3%a9thodologies-de-travail-en-informatique--de-la-cascade-%c3%a0-lagilit%c3%a9\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003ePendant des décennies, la gestion de projet informatique s’est appuyée sur des méthodologies structurées et séquentielles, dont la plus emblématique est sans doute la méthode en cascade. Ce modèle repose sur une progression linéaire des étapes du projet : on commence par une analyse détaillée des besoins, suivie d’une phase de conception, puis de développement, de tests, et enfin de déploiement et de maintenance. Chaque étape doit être achevée avant de passer à la suivante, ce qui confère au processus une certaine rigueur et une visibilité appréciable sur les délais et les coûts.\u003c/p\u003e","title":"La difficulté d'appliquer la méthodologie agile dans les projets informatiques","type":"posts"},{"content":"","date":"12 août 2025","externalUrl":null,"permalink":"/tags/m%C3%A9thodologie/","section":"Tags","summary":"","title":"Méthodologie","type":"tags"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/api/","section":"Tags","summary":"","title":"API","type":"tags"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/archimate/","section":"Tags","summary":"","title":"ArchiMate","type":"tags"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/architecture-applicative/","section":"Tags","summary":"","title":"Architecture Applicative","type":"tags"},{"content":" Êtes-vous concerné par l’Architecture Applicative? # Si vous êtes développeur vous aimeriez comprendre comment les éléments applicatifs interagissent entre eux; comment doit fonctionner un traitement applicatif particulier, avec quels résultats attendus; de quelle manière un utilisateur doit utiliser un écran de saisie ou de consultation.\nSi vous êtes spécialiste infrastructure, vous avez besoin de connaître la nature et la volumétrie des données stockées et échangées; la fréquence et la charge requise par chaque traitement applicatif; l’agencement des différentes solutions applicatives entre elles au sein du système d’information (SI).\nSi vous êtes spécialiste en sécurité, vous souhaitez connaître où se trouvent les données sensibles, par qui sont-elles consultées et modifiées; quelles sont les interactions avec le monde extérieur.\nSi vous êtes décideur ou architecte ou gestionnaire/chargé de projet, vous voulez avoir une vue d’ensemble du fonctionnement du SI.\nMais voilà, parfois la notion d’architecture n’est pas mise en œuvre et les éléments de documentation pour décrire l’existant et la cible n’existent pas. Certains documents décrivent parfois une partie précise du SI orientée pour les besoins d’un certain groupe de lecteurs.\nPourtant la solution existe, elle consiste à suivre les grands principes de l’Architecture IT en décrivant l’Architecture Applicative de tout ou partie du système d’information.\nVue d’ensemble de l’Architecture IT # Pour bien comprendre ce qu’est l’Architecture Applicative, il faut commencer par les différentes manières de représenter l’Architecture IT.\nIl faut bien comprendre que selon la portée de l’architecture, la taille et l’organisation du SI, ainsi que la culture et les méthodes de l’entreprise, le découpage de même que les noms des étapes peuvent varier.\nTout part d’un besoin au sein d’un processus métier.\nL’objectif est alors de représenter les fonctions et utilisateurs impliqués au travers de cas d’usages, c’est l’Architecture Métier ou Architecture d’Affaires.\nSi les changements concernent l’organisation des applications (blocs fonctionnels, flux intra et inter-applicatifs, interface utilisateur), on parle alors de l’Architecture Applicative.\nPour documenter le détail des besoins, les fonctions impactées sont spécifiées: on parle d’Architecture Fonctionnelle.\nTout ce qui a trait aux données utilisées (nomenclature, normes, méthodes, outils) est documenté dans l’Architecture de Données.\nEnfin, la conception des modifications à apporter aux composants logiciels en utilisant des modèles logiques (module, composant, classes) est nommée l’Architecture Applicative Logique ou Architecture Logicielle.\nEt pour finir, l’implémentation avec les technologies sélectionnées (SGBD, serveurs, middleware…) va se faire en utilisant l’Architecture Technique.\nDéfinition de l’Architecture Applicative # Comme nous l’avons vu précédemment, l’Architecture Applicative n’est pas une notion figée et invariable appliquée uniformément par tous.\nNon, il s’agit de principes directeurs appliqués au sein d’une méthode ou d’un cadre d’architecture (architecture framework) souvent défini dans l’Architecture d’Entreprise.\nLes grandes idées de l’Architecture Applicative sont de décrire à haut niveau une hiérarchie d’applications, de blocs ou composants, de fonctionnalités, d’entités. Chaque élément peut interagir avec d’autres au sein ou en dehors de son contenant.\nIl faut bien voir que le principe d’Architecture Applicative peut s’appliquer à des cas de figure très variés. C’est pourquoi le principe est souple et que plusieurs cadres existent.\nEn effet, les projets suivants ont tous besoin d’une Architecture Applicative, pourtant ils sont très différents les uns des autres:\nmise en oeuvre d’un progiciel sur site sur étagère, à configurer mise en oeuvre d’un progiciel sur site associé à du développement sur mesure mise en oeuvre d’une solution SaaS à intégrer aux autres briques applicatives sous-traitance d’un processus applicatif complet à un prestataire développement d’une application sur grand système (mainframe) développement d’une application web 3-tiers développement d’une application à base de micro-services développement d’une application orientée service développement d’une application répartie basée sur des événements d’affaires circulant sur un bus applicatif développement d’une application entièrement dans le Cloud en connectant des services en ligne développement d’une application pour mobile développement d’une application pour ordinateur personnel développement d’une application pour objet connecté développement d’une application pour machine industrielle développement d’une application pour calculateur scientifique Les déclinaisons de l’Architecture Applicative # L’Architecture Applicative peut aussi regrouper un ensemble de sous-domaines architecturaux qui peuvent parfois éclipser le nom même d’Architecture Applicative:\nArchitecture Logicielle Architecture d’Intégration Architecture de Données Architecture Fonctionnelle L’Architecture Logicielle va plus être orientée développement et cela se retrouve par les termes utilisés. On va ici parler de composants, de modules, de librairies, de framework, de modèle de données, d’expérience utilisateur, de l’interface utilisateur, de langages… L’Architecture d’Intégration est en charge de décrire comment les applications vont s’intégrer les unes avec les autres:\nla nature, la description et le format des données échangées la nature et le format des flux de communication synchrones et asynchrones la description des éléments propre à l’intégration L’Architecture de Données veille à conserver une cohérence et une traçabilité des données du SI. Elle décrit les modèles logiques de données, les modèles de description de données et les modèles physiques de données. Elle participe aussi en établissant des règles sur le choix des outils de stockage et d’échange de données, les bonnes pratiques, l’anonymisation et l’optimisation du traitement des données. L’Architecture Fonctionnelle est souvent la partie la plus mise en œuvre car elle décrit les besoins métier ou d’affaires en spécifications fonctionnelles utilisables par les concepteurs ou développeurs.\nDe manière générale, l’Architecture Applicative apporte les éléments suivants:\nune vue globale des éléments applicatifs une description précise du comportement attendu de chaque élément une description des interactions possibles entre les éléments une description des données utilisées et échangées par les éléments une feuille de route des grandes étapes de mise en oeuvre un guide de description et d’implémentation des modèles réutilisables de solutions (voir Architecture de Solution/LIEN) Les facettes de l’Architecture Applicative # Une application peut s’opérer de manière plus ou moins visible vis à vis des utilisateurs internes ou clients. Le frontend au contact des utilisateurs, le backend dans les coulisses La partie en visibilité des utilisateurs (internes ou clients) se nomme le frontend. Un des aspects essentiels à surveiller est ici l’expérience utilisateur, c’est à dire le ressenti à l’usage.\nMême si de nos jours, il est essentiellement question d’application web ou mobile, il ne faut pas oublier tout le pan des applications des postes de travail et l’existant grand système.\nAinsi, la description du frontend comprend l’interface utilisateur, les interactions entre les éléments de l’interface et l’utilisation des services applicatifs du backend.\nLa partie en arrière-plan qui va traiter les données en exécutant des traitements sans interactions avec les utilisateurs principaux s’appelle le backend. Ici, la sécurité, la résilience, la performance, la scalabilité (faculté de monter facilement en charge) sont les maîtres-mots.\nLa documentation du backend concerne donc principalement les schémas de données, les échanges de données, l’intégration entre applications, les traitements batchs et les services applicatifs.\nLes méthodes de l’Architecture Applicative # Comme nous l’avons vu, l’Architecture Applicative regroupe une grande variété de contextes et cas d’utilisation totalement différents.\nCela concerne des applications nouvelles, web ou mobile, aussi bien que applications existant depuis plusieurs décennies, époque où l’internet le PC n’existaient pas.\nEnsuite, selon la culture et l’activité des entreprises, les besoins en termes de sécurité, d’agilité, de conformité… sont très différents.\nEntre une institution financière internationale et une startup dans les jeux gratuits sur mobile, les différences de besoins d’Architecture Applicative sont énormes.\nEt même au sein d’une Architecture d’Entreprise, la nature d’une application particulière peut amener à utiliser une méthode différente.\nEn termes de méthodes, plusieurs grands courants architecturaux sont disponibles depuis longtemps tels que:\nl’approche Donnes/Traitements (framework Zachman, Merise), démarche top-down en séquence, lourde et verbeuse l’approche Composant plus adaptée aux systèmes distribués et orientés objets (framework Zachman), méthode assez rigide et manquant parfois de pragmatisme l’approche orienté service (SOA) met en oeuvre des services permettant d’avoir un faible couplage avec l’extérieur de l’application l’approche des processus métier est basée sur une méthodologie de modélisation et un formalisme de description (UML). UML s’est en effet imposé en tant que standard de formalisation de la modélisation. Toutefois il n’y a pas de norme unique pour la modélisation. Chaque fournisseur peut avoir sa propre méthode utilisant UML. Les outils utilisés sont le BPM (Business Process Modeling) ou le BPR (Business Process Re-engineering) tels que Mega, Erwin/Casewise. Les livrables de l’Architecture Applicative # La liste des livrables fournis par l’Architecture Applicative varie en fonction de l’organisation, des normes et méthodes de l’architecture dans son ensemble.\nToutefois, voici les principaux livrables possibles:\nenvironnement de conception et développement la liste des briques techniques requises pour la conception et l’implémentation tels que les librairies, progiciels, solutions SaaS, design patterns (motifs de conception) à utiliser… les outils de modélisation et de conception les outils de développement (IDE) les standards et méthodes de développement à utiliser la description fonctionnelle les diagrammes des structures de données, des traitements, des enchaînements, des interfaces les maquettes de l’interface utilisateur les spécifications fonctionnelles (requis, attendus, contraintes) les spécifications de l’intégration les spécifications de conception logicielle Le rôle de l’Architecte Applicatif # L’Architecte Applicatif a souvent un rôle central car il est un des seuls à avoir une vision globale du fonctionnement applicatif avec les aspects fonctionnels, techniques et architecturaux.\nEn outre, il procède par étapes en élaborant d’abord une ébauche de la vue d’ensemble puis en affinant successivement les composants à implémenter. L’Architecte Applicatif a alors pour principaux rôles:\nde recenser les besoins fonctionnels, les contraintes et règles métier ou d’affaires d’élaborer et communiquer les principes directeurs de l’architecture applicative de définir les besoins techniques de participer aux choix technologiques de créer l’Architecture Applicative de participer ou de créer la conception logicielle de supporter les concepteurs et développeurs de participer aux phases de tests, d’intégration, d’acceptation et de performance L’Architecture Applicative au service de l’urbanisation du SI L’urbanisation du système d’information (SI) décrit les constituants du SI et les interactions entre ces éléments, sans entrer dans le détail de la conception et de l’implémentation.\nSon but est de s’assurer d’une cohérence globale au niveau du SI.\nAinsi, l’Architecture Applicative participe à maintenir l’évolutivité et l’uniformité du SI en respectant les règles et contraintes édictées et en veillant à décliner ces pratiques dans toute la granularité qu’elle va définir.\nL’objectif de l’Architecture Applicative est donc de servir à la fois les concepteurs et développeurs. Ceci afin d’implémenter la solution mais aussi afin de veiller à la cohérence globale, à la sécurité, à la résilience et à l’évolutivité du système d’information.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/architecture-applicative---mise-en-contexte/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eÊtes-vous concerné par l’Architecture Applicative? \n    \u003cdiv id=\"êtes-vous-concerné-par-larchitecture-applicative\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#%c3%aates-vous-concern%c3%a9-par-larchitecture-applicative\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eSi vous êtes développeur vous aimeriez comprendre comment les éléments applicatifs interagissent entre eux; comment doit fonctionner un traitement applicatif particulier, avec quels résultats attendus; de quelle manière un utilisateur doit utiliser un écran de saisie ou de consultation.\u003c/p\u003e\n\u003cp\u003eSi vous êtes spécialiste infrastructure, vous avez besoin de connaître la nature et la volumétrie des données stockées et échangées; la fréquence et la charge requise par chaque traitement applicatif; l’agencement des différentes solutions applicatives entre elles au sein du système d’information (SI).\u003c/p\u003e","title":"Architecture Applicative - Mise en contexte","type":"posts"},{"content":"L\u0026rsquo;architecture applicative constitue l\u0026rsquo;épine dorsale des systèmes informatiques modernes. Elle détermine la structure organisationnelle et la répartition fonctionnelle d\u0026rsquo;une application, de la conception initiale jusqu\u0026rsquo;à la mise en production. Dans cet article, nous explorerons en profondeur les fondements, les modèles et les bonnes pratiques permettant de créer des applications évolutives et maintenables.\nIntroduction # Dans un monde numérique en constante évolution, les exigences des utilisateurs et les contraintes technologiques se multiplient. Pour répondre à ces défis, une architecture applicative bien pensée ne se contente pas de structurer du code ; elle définit la stratégie globale permettant de découpler les responsabilités et d’optimiser les performances, la scalabilité et la résilience des systèmes. Ce travail d’ingénierie est aujourd’hui incontournable pour les entreprises souhaitant rester compétitives et agiles.\nFondements et Définitions # L\u0026rsquo;architecture applicative désigne l\u0026rsquo;ensemble des règles, des composants et des interfaces qui structurent l\u0026rsquo;application. Elle inclut :\nLa séparation des préoccupations : découper l’application en modules ou couches ayant chacun une responsabilité clairement définie, facilitant ainsi la compréhension, le test et la maintenance. La modularité : concevoir des composants indépendants et réutilisables qui peuvent être déployés et mis à jour de manière isolée. Les patrons de conception : utiliser des modèles éprouvés (comme le Model-View-Controller, les architectures en couches ou les microservices) pour standardiser et rationaliser la structure logicielle. Ces principes aident à créer des environnements flexibles où les évolutions techniques et les changements fonctionnels s’intègrent de manière fluide.\nLes Modèles Architecturaux # Plusieurs modèles architecturaux se distinguent par leurs caractéristiques et leurs cas d’usage :\n1. Architecture Monolithique # Le modèle monolithique condense l’ensemble des fonctionnalités en une seule application déployable. Ses atouts résident dans la simplicité initiale et une gestion centralisée. Cependant, à mesure que l’application grandit, la complexité et la difficulté de mise à jour apparaissent, notamment en termes de scalabilité et de déploiement.\n2. Architecture en Microservices # Ce modèle distribue l\u0026rsquo;application en une multitude de services autonomes. Chaque microservice incarne une fonction métier précise et communique avec les autres via des API. Les avantages résident dans la flexibilité (chaque service peut être développé, déployé et mis à jour indépendamment), la scalabilité fine et l’amélioration de la résilience globale. Cependant, la coordination, la gestion des communications interservices et la surveillance deviennent des défis techniques non négligeables.\n3. Architecture Orientée Services (SOA) # Parmi les prédécesseurs des microservices, le paradigme SOA se base sur des services interconnectés via des standards versatiles tels que SOAP ou REST. Il vise la réutilisabilité des composants et une intégration aisée des systèmes hétérogènes. Alors que SOA offre une plus grande souplesse d’intégration, son implémentation peut s’avérer complexe en termes de gouvernance et de sécurité.\nPrincipes Fondamentaux de Conception # Au cœur de l’architecture applicative se trouvent plusieurs principes directeurs qui garantissent la qualité et l’efficacité du système :\nSingle Responsibility Principle (SRP) : Chaque module ou service doit répondre à une seule responsabilité afin de favoriser la maintenabilité. Loose Coupling : Diminuer les interdépendances entre composants permet de faciliter les évolutions et la résilience face aux erreurs. High Cohesion : Organiser le code de manière à ce que les éléments ayant des fonctionnalités similaires soient regroupés améliore la compréhension et la réutilisation. Scalabilité et Disponibilité : Concevoir dès le départ une architecture qui supporte l’augmentation du nombre d’utilisateurs et la charge de travail tout en garantissant une haute disponibilité. Ces principes sont au cœur des méthodologies agiles et des stratégies DevOps, qui placent l’accent sur l’automatisation, l’intégration continue et la réactivité face aux changements.\nAvantages et Défis # Une architecture bien conçue offre plusieurs avantages majeurs :\nScalabilité : Possibilité d’allouer dynamiquement des ressources selon la demande. Maintenabilité : Un code segmenté et structuré permet une évolution rapide sans risques de régression. Flexibilité : L’intégration de nouvelles technologies et la réponse aux demandes changeantes du marché deviennent plus aisées. Résilience : Une conception modulable permet d’isoler les pannes et de limiter leur impact global sur l’application. Cependant, ces avantages ne viennent pas sans défis. La complexité accrue, la gestion des communications entre services et la sécurité des données exigent une expertise et un investissement constant dans la surveillance et l’optimisation du système.\nBonnes Pratiques pour une Architecture Réussie # Pour tirer pleinement parti des atouts d\u0026rsquo;une architecture applicative de qualité, il est essentiel d\u0026rsquo;appliquer certaines bonnes pratiques :\nDocumentation détaillée : Maintenir une documentation à jour facilite la transmission des connaissances et l\u0026rsquo;intégration de nouveaux développeurs. Tests automatisés : Mettre en place des tests unitaires, d\u0026rsquo;intégration et de performance permet de garantir la stabilité après chaque modification. Surveillance et Logging : Utiliser des outils de monitoring pour détecter et analyser les anomalies en temps réel. Gestion des versions : Les déploiements fréquents et contrôlés réduisent les risques et améliorent la qualité globale du logiciel. Adoption de DevOps : Une culture DevOps favorise la collaboration entre équipes de développement et d’exploitation, accélérant ainsi les cycles de développement et de déploiement. Cas d\u0026rsquo;Usage et Tendances Futures # Les architectures applicatives modernes se retrouvent dans divers domaines :\nApplications mobiles et web : La nécessité d’offrir des performances optimales et des mises à jour rapides a favorisé l’adoption des microservices. Internet des Objets (IoT) : La gestion d’un nombre colossal de dispositifs et de données en temps réel nécessite une architecture hautement scalable et flexible. Intelligence Artificielle et Big Data : Le traitement massif des données et l’implémentation de solutions AI demandent des architectures évolutives et distribuées. Les tendances futures pointent vers une hybridation des architectures, combinant les avantages du cloud, des containers et des technologies serverless pour offrir des systèmes encore plus modulaires et dynamiques.\nConclusion # L\u0026rsquo;architecture applicative n\u0026rsquo;est pas simplement un ensemble de technologies ou de frameworks. C\u0026rsquo;est une philosophie de conception qui place l\u0026rsquo;humain et l\u0026rsquo;agilité au centre du développement logiciel. En appliquant des principes solides et en choisissant des modèles adaptés aux besoins spécifiques de l\u0026rsquo;organisation, il est possible de bâtir des systèmes performants, sécurisés et facilement évolutifs. Dans un environnement en constante mutation, repenser et optimiser régulièrement son architecture est devenu une nécessité stratégique pour toute entreprise souhaitant innover et se démarquer.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/architecture-applicative---concevoir-des-syst%C3%A8mes-robustes-et-adaptables/","section":"Posts","summary":"\u003cp\u003eL\u0026rsquo;architecture applicative constitue l\u0026rsquo;épine dorsale des systèmes informatiques modernes. Elle détermine la structure organisationnelle et la répartition fonctionnelle d\u0026rsquo;une application, de la conception initiale jusqu\u0026rsquo;à la mise en production. Dans cet article, nous explorerons en profondeur les fondements, les modèles et les bonnes pratiques permettant de créer des applications évolutives et maintenables.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#introduction\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eDans un monde numérique en constante évolution, les exigences des utilisateurs et les contraintes technologiques se multiplient. Pour répondre à ces défis, une architecture applicative bien pensée ne se contente pas de structurer du code ; elle définit la stratégie globale permettant de découpler les responsabilités et d’optimiser les performances, la scalabilité et la résilience des systèmes. Ce travail d’ingénierie est aujourd’hui incontournable pour les entreprises souhaitant rester compétitives et agiles.\u003c/p\u003e","title":"Architecture Applicative : Concevoir des Systèmes Robustes et Adaptables","type":"posts"},{"content":"L’Architecture d’Entreprise met en place, applique et fait évoluer les principes directeurs de conception du système d’information (SI): c’est la gouvernance de la conception du SI. En partant de l’urbanisation du SI, en passant par la gouvernance des données et en arrivant à la conception des applications.\nPour ne pas réinventer la roue et pour ne pas être perdu d’une entreprise à l’autre, des cadres de référence (des frameworks) permettent de parler un langage commun au sein des organisations et entre les organisations. Ces frameworks peuvent être orientés méthodologie ou représentation graphique. Voir Différences entre TOGAF et Archimate.\nHistoire des Frameworks d’Architecture d’Entreprise en quelques dates # Au début de l’informatique, le besoin de cartographier l’existant s’est présenté, d’abord pour les aspects technologiques: l’architecture it est née. Dans les années 1980-1990, le périmètre de l’architecture s’élargit et se formalise.\nEn 1986, les travaux d’IBM mènent à la publication de PRISM Enterprise Framework.\nEn 1987, le Framework Zachman est publié par John Zachman, consultant américain, pionnier de l’Architecture d’Entreprise.\nEn 1989, le NIST (National Institute of Standards and Technology) publiera le NIST Enterprise Architecture Model.\nEn 1994, l’Open Group sélectionne TAFIM issu du département américain de la défense, comme base pour le développement de TOGAF (The Open Group Architecture Framework).\nLes années 1990 voient la fusion au sein des frameworks des composantes applicatives ainsi que de la stratégie globale de l’entreprise en lien avec les besoins métier (business): cela aboutira à FEAF (Federal Enterprise Architectural Framework) et TOGAF (The Open Group Architectural Framework).\nPrincipes communs des frameworks # Il est maintenant commun de retrouver dans la majorité des frameworks d’Architecture d’Entreprise un découpage en quatre domaines (à ne pas confondre avec les domaines applicatifs). Toutefois, les domaines Data et Application peuvent parfois se trouver fusionnés:\nEn outre ces domaines sont vus comme des calques/niveaux (layers) exécutant des processus sur des composants. Chaque niveau offre des services aux niveaux au dessus:\nEnvironnement: entités externes prise en compte par les affaires, contraintes légales, économiques, sociales, clients Business, Métier, affaires: fonctions exprimant la stratégie de l’entreprise Données: informations métiers et toute données ayant de la valeur pour les affaires Application: Système d’information, applications métier Technologie: infrastructure matérielle, réseau et logicielle Pour assurer une compréhension uniforme par tous, l’architecture est souvent décrite à l’aide d’outils méthodologiques standards tels que UML ou Archimate.\nQuelques exemples de diagrammes d’Architecture d’Entreprise:\nLes bénéfices de l’Architecture d’Entreprise sont bien présents: une définition et une exécution de la stratégie IT calquée sur la stratégie d’entreprise, une meilleure adaptabilité (flexibilité, agilité), une gestion efficace des ressources du SI, une facilité de communication (un langage commun à l’aide des frameworks) et une planification plus aisée (découpage clair des domaines et responsabilités).\nL’Architecture d’Entreprise agit ainsi à la fois comme un liant et comme un catalyseur pour faire avancer toutes les composantes de l’entreprise dans la même direction. Elle partage de manière concrète les orientations de l’entreprise et veille au respect de méthodes et standards communs. Elle assure aussi un rôle de communication pour maintenir chacun à un même niveau d’information.\nL’Architecte d’Entreprise adapte le système d’information (SI) à la stratégie métier de l’entité (entreprise, organisation, secteur publique). Il peut s’appuyer sur d’autres architectes ou cumuler certains de ces rôles: l’Architecte d’Affaires ou Architecte Fonctionnel, l’Architecte des Données, l’Architecte Applicatif, l’Architecte Technique ou Technologique (orienté fonctions techniques), l’Architecte de Solutions.\nLe rôle de l’Architecte d’Entreprise n’est pas tant technique que stratégique et diplomate: il fait souvent se parler entre elles des structures qui n’ont pas l’habitude de travailler entre elles et qui ne partagent pas, au départ, les mêmes référentiels.\nL’Architecture d’Entreprise aide l’entité à prendre des décisions efficaces en s’appuyant sur des données, des processus et des responsabilités clairement définies et partagées.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/architecture-d-entreprise-ou-la-gouvernance-de-la-conception-du-si/","section":"Posts","summary":"\u003cp\u003eL’Architecture d’Entreprise met en place, applique et fait évoluer les principes directeurs de conception du système d’information (SI): c’est la gouvernance de la conception du SI. En partant de l’urbanisation du SI, en passant par la gouvernance des données et en arrivant à la conception des applications.\u003c/p\u003e\n\u003cp\u003ePour ne pas réinventer la roue et pour ne pas être perdu d’une entreprise à l’autre, des cadres de référence (des frameworks) permettent de parler un langage commun au sein des organisations et entre les organisations. Ces frameworks peuvent être orientés méthodologie ou représentation graphique. Voir \u003ca\n  href=\"https://architecti.blog/posts/diff%c3%a9rences-entre-togaf-et-archimate/\"\n    target=\"_blank\"\n  \u003eDifférences entre TOGAF et Archimate\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eHistoire des Frameworks d’Architecture d’Entreprise en quelques dates \n    \u003cdiv id=\"histoire-des-frameworks-darchitecture-dentreprise-en-quelques-dates\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#histoire-des-frameworks-darchitecture-dentreprise-en-quelques-dates\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eAu début de l’informatique, le besoin de cartographier l’existant s’est présenté, d’abord pour les aspects technologiques: l’architecture it est née. Dans les années 1980-1990, le périmètre de l’architecture s’élargit et se formalise.\u003c/p\u003e","title":"Architecture D’Entreprise Ou La Gouvernance De La Conception Du SI","type":"posts"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/architecture-de-solution/","section":"Tags","summary":"","title":"Architecture De Solution","type":"tags"},{"content":"L’Architecture de Solution est la moins bien définie des composantes de l’Architecture d’Entreprise. C’est à dire qu’un même terme peut mener à des activités aux contours différents. Pourtant l’importance de l’Architecture de Solution ne cesse de croître en se basant sur la demande en Architectes de Solution. Essayons de préciser ses contours.\nQu’est-ce que l’Architecture de Solution? # Pour le Gartner, l’Architecture de Solution est la description architecturale d’une solution spécifique, une solution étant un ensemble cohérent et suffisant de caractéristiques permettant de répondre à un ensemble de besoins.\nPour le Scaled Agile Framework (SAFe), l’Architecture de Solution permet de définir et communiquer une vision architecturale et technique partagée des travaux en cours.\nEn revanche, l’Open Group ne définit pas l’Architecture de Solution. Toutefois, la Federation of Enterprise Architecture Professional Organizations définit l’Architecture de Solution agissant d’un point de vue tactique, c’est à dire avec l’objectif de répondre à une situation précise. A la différence de l’Architecture d’Entreprise dans son ensemble qui agit à un niveau stratégique.\nEn résumant, l’Architecture de Solution est l’application à un problème spécifique des principes directeurs émis par l’Architecture d’Entreprise. Précisons ce point.\nL’Architecture de Solution est donc à la croisée de l’Architecture Fonctionnelle, l’Architecture Applicative, l’Architecture de Données et de l’Architecture Technologique.\nPar conséquent, l’Architecture de Solution combine les points de vue de ces architectures pour concevoir la description d’une solution particulière. De même, le retour d’expérience de la conception permet d’enrichir l’Architecture d’Entreprise avec des modèles, des précisions, des règles ou des normes.\nL’Architecture de Solution peut ainsi s’appliquer au découpage d’une application en solutions autonomes, à l’adaptation d’une offre commerciale aux caractéristiques des clients, ou à tous les sujets applicatifs à la frontière entre les aspects fonctionnels et techniques.\nhttps://lucbories.com/wp-content/uploads/2020/10/Map-des-architectes.png\nRôle et métier de l’Architecte de Solution # Il est rare de trouver une description de l’Architecture de Solution mais il est fréquent de trouver une description du rôle associé: l’Architecte de Solution. Fonction à temps plein ou rôle parmi d’autres pour un architecte, les prérogatives de l’Architecte de Solution peuvent largement fluctuer selon les situations.\nD’un point de vue général, l’Architecte de Solution peut mener une équipe multidisciplinaire, technologique et fonctionnelle, afin de mixer des éléments techniques, stratégiques et fonctionnels.\nOn retrouve ainsi l’Architecte de Solution au sein d’une équipe d’architectes pour prendre en main des sujets à part entière comme des solutions d’intégration entre plusieurs applications ou parties prenantes. Ce rôle peut, dans ce cas, s’apparenter à celui de l’Architecte d’Intégration.\nAu sein d’un fournisseur, un Architecte de Solution va s’atteler à définir la mise en place d’un produit au sein de l’architecture d’un client en partant souvent de gabarits de solutions. L’Architecte de Solution fournira un travail techniquement détaillé jusqu’au déploiement et à l’exploitation de la solution fournie.\nLa mise en place d’Architectes de Solution dépend de la taille et de l’organisation de l’entité (entreprise, organisation, association).\nParfois, une grande entité a une architecture très macroscopique et a besoin d’Architectes de Solution pour la conception détaillée de portion d’architecture.\nDans d’autre cas, une entité de taille plus réduite ne dispose pas d’Architecture d’Entreprise et a recours à l’Architecture de Solution pour formaliser des parties de son système d’information.\nDans tous les cas, l’Architecture de Solution apporte une plus-value à l’absence de solution détaillée autour d’une problématique.\nAvec sa vision à la croisée de l’Architecture Fonctionnelle, de l’Architecture Applicative, de l’Architecture de Données et de l’Architecture Technologique, l’Architecture de Solution offre une conception précise et adaptée au contexte métier (besoins, stratégie) tout en étant pertinente sur les choix techniques et sur le respect des règles de sécurité.\nEn effet, un des atouts de l’Architecture de Solution est de faciliter la conception et l’usage de briques architecturales réutilisables pour répondre rapidement à des problèmes similaires. Pour se faire, l’Architecture de Solution va suivre les règles et recommandation émises par l’Architecture d’Entreprise dans laquelle elle s’insère.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/architecture-de-solution--conception-autour-dune-probl%C3%A9matique-pr%C3%A9cise/","section":"Posts","summary":"\u003cp\u003eL’Architecture de Solution est la moins bien définie des composantes de l’Architecture d’Entreprise. C’est à dire qu’un même terme peut mener à des activités aux contours différents. Pourtant l’importance de l’Architecture de Solution ne cesse de croître en se basant sur la demande en Architectes de Solution. Essayons de préciser ses contours.\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003eQu’est-ce que l’Architecture de Solution? \n    \u003cdiv id=\"quest-ce-que-larchitecture-de-solution\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#quest-ce-que-larchitecture-de-solution\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003ePour le Gartner, l’Architecture de Solution est la description architecturale d’une solution spécifique, une solution étant un ensemble cohérent et suffisant de caractéristiques permettant de répondre à un ensemble de besoins.\u003c/p\u003e","title":"Architecture De Solution – Conception Autour D’une Problématique Précise","type":"posts"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/cloud/","section":"Tags","summary":"","title":"Cloud","type":"tags"},{"content":" Introduction # L’architecture microservices a révolutionné la manière dont les systèmes logiciels sont conçus, développés et maintenus. Elle repose sur le principe de décomposer une application monolithique en une série de services indépendants, chacun responsable d’un domaine fonctionnel bien défini. Mais cette décomposition soulève une question cruciale : comment définir les limites de chaque service ?\nC’est là qu’intervient le concept de bounded context, issu de la méthodologie Domain-Driven Design (DDD). Ce concept permet de structurer les microservices autour de modèles métier cohérents, en évitant les ambiguïtés et les dépendances inutiles.\nDans cet article, nous allons explorer en profondeur ce qu’est un bounded context, pourquoi il est essentiel en architecture microservices, et comment l’appliquer à travers un exemple concret.\n1. Qu’est-ce qu’un Bounded Context ? # Un bounded context est une zone délimitée dans laquelle un modèle métier spécifique est défini et utilisé de manière cohérente. Il représente une frontière logique autour d’un sous-domaine métier, à l’intérieur de laquelle les termes, les règles et les comportements ont un sens bien précis.\nDans le cadre de DDD, un modèle métier peut varier selon le contexte dans lequel il est utilisé. Par exemple, le mot “Client” peut signifier une personne physique dans le contexte de la facturation, mais une entité commerciale dans le contexte du CRM. Le bounded context permet de préserver la clarté sémantique en évitant les collisions de sens.\n2. Pourquoi le Bounded Context est-il crucial en microservices ? # En architecture microservices, chaque service doit être autonome, faiblement couplé et fortement cohérent. Le bounded context aide à atteindre ces objectifs en :\nClarifiant les responsabilités : chaque service connaît précisément son rôle métier. Réduisant les dépendances : les services n’ont pas besoin de connaître les détails internes des autres. Facilitant l’évolution : chaque service peut évoluer indépendamment sans impacter les autres. Améliorant la testabilité : les modèles sont isolés, ce qui simplifie les tests unitaires et d’intégration. 3. Exemple concret : Plateforme e-commerce # Prenons l’exemple d’une plateforme e-commerce. Elle peut être décomposée en plusieurs microservices :\nCatalogue : gestion des produits Commande : traitement des commandes Paiement : gestion des transactions Livraison : suivi des expéditions Client : gestion des profils utilisateurs Définition des bounded contexts # Microservice Bounded Context Modèle métier Catalogue Produits Produit, Catégorie Commande Commandes Commande, LigneCommande Paiement Transactions Facture, Transaction Livraison Expéditions Colis, AdresseLivraison Client Utilisateurs Client, Profil Chaque service possède son propre modèle métier, adapté à son contexte. Par exemple :\nLe Catalogue connaît les détails du produit : description, prix, stock, images. Le Commande ne manipule pas directement le produit, mais une copie simplifiée (LigneCommande) avec le nom, le prix au moment de l’achat, et l’ID. Ainsi, si le modèle Produit évolue (ajout d’un champ “Origine”), cela n’impacte pas le service Commande, car il ne dépend pas du modèle complet.\n4. Communication entre bounded contexts # Les bounded contexts ne sont pas des silos hermétiques. Ils doivent collaborer pour que l’application fonctionne. Cette collaboration se fait via des interfaces bien définies, souvent sous forme d’API REST, de messages asynchrones ou d’événements.\n🔁 Exemple : Commande et Catalogue # Lorsqu’un utilisateur passe une commande, le service Commande doit connaître le prix du produit. Il peut :\nAppeler une API du Catalogue pour récupérer les infos nécessaires Ou écouter un événement “ProduitMisÀJour” publié par le Catalogue Mais une fois la commande validée, le prix est figé dans le modèle LigneCommande, même si le produit change ensuite dans le Catalogue. Cela garantit la consistance historique.\n5. Cartographie des bounded contexts # Pour bien définir les bounded contexts, il est utile de créer une carte contextuelle (context map), qui montre :\nLes différents contextes Leurs relations Le type d’intégration (conformiste, anticorruption layer, etc.) Exemple simplifié : # [Catalogue] ← API REST ← [Commande] ← Événement ← [Paiement] ↑ Événement ↓ [Client] Cette carte aide à visualiser les flux d’information et les dépendances.\n6. Stratégies de modélisation # Voici quelques bonnes pratiques pour modéliser les bounded contexts :\nIdentifier les sous-domaines métier : discute avec les experts métier pour comprendre les besoins. Définir un vocabulaire clair : chaque contexte doit avoir son propre langage. Éviter le partage de modèles : ne pas utiliser les mêmes classes ou entités dans plusieurs services. Utiliser des DTOs ou des événements pour échanger les données entre services. 7. Erreurs fréquentes à éviter # Couplage excessif : partager des entités entre services crée des dépendances fragiles. Modèle unique pour tous : vouloir un “modèle universel” mène à des conflits sémantiques. Absence de limites claires : sans bounded context, les responsabilités deviennent floues. 8. Bounded Context vs Microservice # Il est courant d’associer un bounded context à un microservice, mais ce n’est pas une règle absolue.\nUn bounded context est une notion métier. Un microservice est une implémentation technique. Dans certains cas, un microservice peut couvrir plusieurs petits bounded contexts, ou un bounded context peut être réparti sur plusieurs microservices. L’essentiel est de préserver la cohérence du modèle métier.\nConclusion # Le concept de bounded context est un pilier fondamental de l’architecture microservices. Il permet de structurer les services autour de modèles métier cohérents, de réduire les dépendances, et de faciliter l’évolution du système.\nEn définissant clairement les limites de chaque contexte, en respectant les principes de DDD, et en favorisant une communication bien pensée entre services, on construit des systèmes plus robustes, plus évolutifs et plus compréhensibles.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/comprendre-le-bounded-context-en-architecture-microservices/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#introduction\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eL’architecture microservices a révolutionné la manière dont les systèmes logiciels sont conçus, développés et maintenus. Elle repose sur le principe de décomposer une application monolithique en une série de services indépendants, chacun responsable d’un domaine fonctionnel bien défini. Mais cette décomposition soulève une question cruciale : \u003cstrong\u003ecomment définir les limites de chaque service ?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eC’est là qu’intervient le concept de \u003cstrong\u003ebounded context\u003c/strong\u003e, issu de la méthodologie \u003cstrong\u003eDomain-Driven Design (DDD)\u003c/strong\u003e. Ce concept permet de structurer les microservices autour de modèles métier cohérents, en évitant les ambiguïtés et les dépendances inutiles.\u003c/p\u003e","title":"Comprendre le Bounded Context en Architecture Microservices","type":"posts"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/conception/","section":"Tags","summary":"","title":"Conception","type":"tags"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/containers/","section":"Tags","summary":"","title":"Containers","type":"tags"},{"content":"Répondre à la question des différences entre TOGAF et ArchiMate n’est pas simple mais voici ce que vous devez savoir.\nOr une majorité d’entreprises démarrent ou renouvellent leurs pratiques d’architecture d’entreprise. Votre organisation fait-elle partie de cette tendance?\nSi c’est le cas, vous n’êtes pas seul à vous poser la question.\nCar de nombreux architectes d’entreprise sont confus par la différence entre TOGAF et ArchiMate.\nEn effet, il existe des similitudes mais aussi des différences entre ces deux standards.\nAlors, mieux vaut-il vous former à l’un ou à l’autre?\nL’origine de TOGAF, ArchiMate et ISO 42010 # Tout d’abord, le processus par lequel les entreprises normalisent et organisent leur infrastructure informatique est appelé l’Architecture d’Entreprise. Or ArchiMate et TOGAF sont deux standards qui participent à la transformation numérique des organisations au travers de l’Architecture d’Entreprise (EA).\nThe Open Group gère et maintient les deux normes, c’est pourquoi on y retrouve des similarités. The Open Group étant un consortium international qui vise à établir des standards et certifications indépendants des fournisseurs technologiques.\nQuant à la norme ISO 42010, elle définit les concepts de base de l’EA. L’ISO est une organisation internationale, elle élabore des normes pour garantir la qualité, la sécurité et l’efficacité des produits, des services et des systèmes. La documentation de l’architecture étant différente de l’architecture elle-même, ISO ne précise pas la forme que doit prendre la description.\nTOGAF ou ArchiMate, lequel choisir ? # TOGAF et ArchiMate sont toutes deux des normes d’Architecture d’Entreprise mais elles n’ont pas les mêmes objectifs. TOGAF va permettre de définir, gouverner et communiquer l’architecture elle-même tandis qu’ArchiMate est un moyen de décrire l’architecture au travers de diagrammes.\nTOGAF est ainsi un framework d’architecture. C’est un cadre de cadres qui décrit des éléments pratiques pour que les entreprises puissent aligner leurs objectifs informatiques avec leurs objectifs généraux. La partie la plus détaillée est l’Architectural Dévelopment Method ou méthode de développement architecturale qui se compose de quatre domaines:\nArchitecture d’entreprise Architecture applicative Architecture de données Architecture technologique L’Architecture d’Entreprise comprend la stratégie d’entreprise, la gouvernance et l’organisation. L’Architecture Applicative propose une méthode pour structurer et utiliser les systèmes applicatifs conformément aux objectifs métier.\nL’Architecture de Données décrit comment structurer le stockage des données, comment les gérer et les maintenir.\nL’Architecture Technologique retranscrit le matériel, les logiciels et l’infrastructure dont l’entreprise a besoin pour atteindre ses objectifs.\nLes principales caractéristiques et la structure de la version précédente sont conservées dans la dernière version du standard TOGAF, la version 9.2. Mais celle-ci apporte de meilleurs conseils et une structure améliorée. En plus de corriger des erreurs et de supprimer des contenus obsolètes.\nArchiMate est un langage de modélisation. Il aide les architectes d’entreprise à comprendre les relations entre les différents domaines d’architecture. Il existe une structure simple et uniforme pour décrire le contenu au sein des domaines. De la même manière, ArchiMate propose un langage commun pour décrire la définition et le fonctionnement de fonctions telles que :\nProcessus d’affaires Structures organisationnelles Flux d’informations Systèmes informatiques ArchiMate prend en charge la modélisation de haut niveau qui se concentre sur l’essentiel d’une organisation. La 3ème édition d’ArchiMate a reçu une mise à jour dans sa version 3.1. Cette itération apporte des corrections et quelques améliorations.\nDifférences entre TOGAF et ArchiMate # Les différences entre TOGAF et ArchiMate les rendent parfaitement adaptés pour travailler ensemble. De nombreux praticiens expérimentés utilisent TOGAF et ArchiMate dans le cadre d’une pratique combinée d’EA.\nTOGAF décrit le processus de création et de gestion des frameworks d’entreprise. Il n’inclut pas de structure de langage de modélisation spécifique. ArchiMate fournit ce langage.\nTOGAF exige que les praticiens documentent les architectures de base, de transition et cibles. Les architectes expriment les préoccupations des parties prenantes de manière à montrer les aspects pertinents de l’architecture.\nArchiMate est un langage graphique avec des formes et des couleurs standards. Il présente graphiquement les différentes vues de l’architecture TOGAF. En effet, les architectures TOGAF ont de nombreuses relations, ce qui peut rendre difficile le maintien de la cohérence. Et l’utilisation de notations différentes aggrave cette difficulté.\nOr les relations ArchiMate ont une structure plus simple. Ils prennent mieux en charge les relations entre les domaines.\nEn résumé, TOGAF montre les tâches clés dans le processus de développement des architectures. ArchiMate ne décrit pas comment développer des architectures. Il offre un moyen normalisé de documenter les descriptions de ces architectures.\nDe nombreux praticiens seniors utilisent TOGAF dans le cadre d’une pratique combinée. Le processus de création et de gestion des frameworks est décrit par TOGAF. Il n’a pas de structure de langage de modélisation. Cette langue est fournie par ArchiMate.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/diff%C3%A9rences-entre-togaf-et-archimate/","section":"Posts","summary":"\u003cp\u003eRépondre à la question des différences entre TOGAF et ArchiMate n’est pas simple mais voici ce que vous devez savoir.\u003c/p\u003e\n\u003cp\u003eOr une majorité d’entreprises démarrent ou renouvellent leurs pratiques d’architecture d’entreprise. Votre organisation fait-elle partie de cette tendance?\u003c/p\u003e\n\u003cp\u003eSi c’est le cas, vous n’êtes pas seul à vous poser la question.\u003c/p\u003e\n\u003cp\u003eCar de nombreux architectes d’entreprise sont confus par la différence entre TOGAF et ArchiMate.\u003c/p\u003e\n\u003cp\u003eEn effet, il existe des similitudes mais aussi des différences entre ces deux standards.\u003c/p\u003e\n\u003cp\u003eAlors, mieux vaut-il vous former à l’un ou à l’autre?\u003c/p\u003e\n\u003chr\u003e\n\n\u003ch2 class=\"relative group\"\u003eL’origine de TOGAF, ArchiMate et ISO 42010 \n    \u003cdiv id=\"lorigine-de-togaf-archimate-et-iso-42010\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#lorigine-de-togaf-archimate-et-iso-42010\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eTout d’abord, le processus par lequel les entreprises normalisent et organisent leur infrastructure informatique est appelé l’Architecture d’Entreprise. Or ArchiMate et TOGAF sont deux standards qui participent à la transformation numérique des organisations au travers de l’Architecture d’Entreprise (EA).\u003c/p\u003e","title":"Différences Entre TOGAF Et ArchiMate","type":"posts"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/gouvernance/","section":"Tags","summary":"","title":"Gouvernance","type":"tags"},{"content":" Introduction : L’architecture applicative au cœur de la révolution numérique** # Dans un monde où l’innovation technologique redéfinit chaque secteur, la transformation numérique n’est plus une option — c’est une nécessité stratégique. Mais derrière les interfaces élégantes et les expériences utilisateurs fluides se cache un pilier souvent invisible mais fondamental : l’architecture applicative. Véritable colonne vertébrale des systèmes d’information modernes, elle conditionne la capacité d’une entreprise à évoluer, à innover et à répondre aux exigences d’un marché en perpétuelle mutation.\nLoin d’être un simple enjeu technique, l’architecture applicative moderne est aujourd’hui un levier de compétitivité. Microservices, conteneurs, APIs, cloud natif… ces concepts ne sont pas des buzzwords, mais les fondations d’une agilité numérique indispensable. Dans cet article, nous explorerons pourquoi repenser son architecture applicative n’est pas seulement judicieux — c’est vital pour réussir sa transformation numérique.\n1. Pourquoi l’architecture applicative est cruciale # La transformation numérique ne se résume pas à digitaliser des processus existants. Elle implique une refonte profonde des modèles opérationnels, des interactions clients et des capacités d’innovation. Or, cette mutation repose sur une infrastructure technologique capable de soutenir l’agilité, la scalabilité et la résilience. C’est là que l’architecture applicative entre en jeu.\nUne architecture bien pensée permet :\nUne meilleure réactivité face aux évolutions du marché Une intégration fluide des nouvelles technologies (IA, IoT, blockchain…) Une réduction des coûts grâce à une maintenance simplifiée et une automatisation accrue Une expérience utilisateur optimisée, grâce à des systèmes plus rapides et plus fiables 2. Les fondations de l’architecture moderne # Les architectures traditionnelles monolithiques montrent rapidement leurs limites dans un environnement numérique exigeant. À l’inverse, les architectures modernes reposent sur des principes clés :\n🔹 Microservices # Découpage des applications en services indépendants Déploiement et mise à jour plus rapides Meilleure résilience : un service défaillant n’affecte pas l’ensemble du système 🔹 Conteneurisation (Docker, Kubernetes) # Isolation des environnements Portabilité entre les infrastructures (cloud, on-premise) Scalabilité dynamique selon la charge 🔹 APIs et intégration # Communication standardisée entre services Ouverture vers des partenaires, des plateformes tierces ou des écosystèmes numériques 🔹 Cloud natif # Infrastructure élastique et à la demande Optimisation des coûts et des performances Accès aux services avancés (machine learning, big data, etc.) 3. Les bénéfices concrets pour les entreprises # Adopter une architecture moderne, c’est investir dans la pérennité et la compétitivité. Voici quelques exemples d’impact :\nObjectif stratégique Contribution de l’architecture moderne Accélérer l’innovation Déploiement rapide de nouvelles fonctionnalités Améliorer la sécurité Isolation des services, gestion centralisée des accès Réduire le time-to-market Intégration continue et automatisation des tests Favoriser la collaboration Architecture orientée services, facilitant le travail en équipes S’adapter aux pics de charge Scalabilité automatique via le cloud et les conteneurs 4. Les défis à anticiper # La transition vers une architecture moderne n’est pas sans obstacles :\nComplexité technique : nécessite des compétences spécifiques Changement culturel : adoption de méthodes DevOps, agilité, etc. Sécurité et gouvernance : nouvelles surfaces d’attaque, besoin de supervision renforcée Legacy : coexistence avec des systèmes anciens parfois critiques Mais ces défis sont surmontables avec une stratégie claire, un accompagnement adapté et une vision long terme.\n5. Conclusion : une architecture pensée pour demain # Dans un monde numérique en constante évolution, l’architecture applicative moderne n’est pas un luxe — c’est une condition sine qua non pour rester pertinent. Elle permet aux entreprises de transformer leurs idées en produits, leurs données en valeur, et leurs ambitions en réalité. Investir dans cette architecture, c’est bâtir les fondations d’une entreprise résiliente, agile et tournée vers l’avenir.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/l-architecture-applicative-moderne---moteur-de-la-transformation-num%C3%A9rique/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eIntroduction : L’architecture applicative au cœur de la révolution numérique** \n    \u003cdiv id=\"introduction--larchitecture-applicative-au-cœur-de-la-révolution-numérique\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#introduction--larchitecture-applicative-au-c%c5%93ur-de-la-r%c3%a9volution-num%c3%a9rique\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eDans un monde où l’innovation technologique redéfinit chaque secteur, la transformation numérique n’est plus une option — c’est une nécessité stratégique. Mais derrière les interfaces élégantes et les expériences utilisateurs fluides se cache un pilier souvent invisible mais fondamental : l’architecture applicative. Véritable colonne vertébrale des systèmes d’information modernes, elle conditionne la capacité d’une entreprise à évoluer, à innover et à répondre aux exigences d’un marché en perpétuelle mutation.\u003c/p\u003e\n\u003cp\u003eLoin d’être un simple enjeu technique, l’architecture applicative moderne est aujourd’hui un levier de compétitivité. Microservices, conteneurs, APIs, cloud natif… ces concepts ne sont pas des buzzwords, mais les fondations d’une agilité numérique indispensable. Dans cet article, nous explorerons pourquoi repenser son architecture applicative n’est pas seulement judicieux — c’est vital pour réussir sa transformation numérique.\u003c/p\u003e","title":"L’architecture applicative moderne : moteur de la transformation numérique","type":"posts"},{"content":"Introduction Beaucoup d’entreprises se lancent dans la Transformation Numérique, certaines ont eu du succès dans leur voyage vers le digital mais peu ont réellement réussi la métamorphose promise par le nouveau monde digital.\nIl n’existe pas de méthode universelle prête à l’emploi, ni même de cible commune à atteindre pour les dirigeants. Chaque entreprise a son secteur d’activité, son fonctionnement, son histoire, sa vision, son capital humain et ses moyens financiers.\nPour autant, l’expérience fait ressortir des étapes clés qui forment les pré requis de haut niveau pour réussir la Transformation Numérique de toute entreprise.\nObserver son environnement # La première des étapes consiste à apprendre des autres entreprises dans son secteur d’activité mais aussi en dehors pour élargir sa vision. C’est ce le sujet d’un séminaire organisé en Novembre par le Forum Économique Mondial, le World Economic Forum avec plus d’une vingtaine de grands dirigeants.\nLa Transformation Numérique est un sujet de discussion mis en avant dans les conseils d’administration car il est à la fois riche et vital. Les thèmes abordés par les équipes de direction sont par exemple:\nl’équilibre entre l’investissement sur les opportunités d’aujourd’hui et l’investissement pour l’avenir la guerre des talents numériques le financement des initiatives numériques l’évolution des initiatives numériques Toutes ces questions nous amènent à considérer quatre grands points d’attention:\ncdans quelle direction votre entreprise devrait aller (stratégie numérique) comment cette direction correspond à l’activité de votre entreprise (modèle commercial) quels sont les éléments nécessaires pour y arriver (catalyseurs) et comment vous gérerez le changement pour arriver à destination (orchestration) Stratégie numérique # La définition d’une stratégie numérique commence par la confrontation de trois questions clés :\nOù se dirige mon secteur d’activité? Quel sera la place de mon entreprise dans ce futur environnement? Comment arriver à cette cible en gérant les changements nécessaires à tous les niveaux? Toutes les réponses ne viendront pas dès le départ, c’est pourquoi il faut suivre un cheminement stratégique menant à la réalisation des opportunités commerciales. Tout en maintenant le cap vers la cible de la Transformation Numérique.\nLa stratégie comprend donc des éléments contemporains qui font émerger des initiatives. Ces premiers projets seront la première brique pour pouvoir lancer des éléments pour le futur. La consolidation de toutes ces actions construira la future entreprise bien ancrée dans le numérique.\nPour que la transformation réussisse, tous les acteurs de l’entreprise doivent être impliqués dans des initiatives, à tous les niveaux de l’organisation. Les dirigeants doivent montrer l’exemple en portant des projets qui ont une portée globale.\nModèle d’affaires # Pour implémenter la stratégie, il est important de trouver les axes de travail. Or les entretiens avec les dirigeants impliqués dans la transformation numérique ont montré que l’objectif premier est toujours une transformation commerciale. De là va en découler des transformations avec des objectifs connexes.\nEn effet, la transformation numérique doit générer une valeur réelle pour le client et de meilleurs résultats pour l’entreprise. Il ne s’agit pas simplement de mettre en œuvre la technologie pour la technologie.\nCes transformations se traduisent généralement par\ndes évolutions de l’expérience client, la digitalisation des produits et services, l’émergence de nouveaux modèles économiques et des avancées opérationnelles. La valeur ajoutée de ces transformations n’est pas limitée à des améliorations ponctuelles bornées dans le temps, il s’agit réellement d’insuffler un souffle nouveau porteur d’efficience et d’opportunité. Facilitateurs # Du modèle d’affaire, l’entreprise doit identifier les facilitateurs en accord avec sa stratégie. En effet, toute Transformation Numérique, quelque soit sa portée, nécessite la modifications ou la mises en œuvre de catalyseurs:\nles bases de données et systèmes d’analyses: offrir l’analyse des données à toute l’entreprise en cassant les silos de données, systèmes informatiques: apporter de l’agilité et de l’ouverture, modèle d’exploitation: repenser la relation de l’entreprise avec ses clients, ses employés, ses partenaires, ses fournisseurs, ses actionnaires, personnes et culture: du recrutement à la séparation, l’entreprise doit s’adapter aux évolutions humaines et culturelles. Lorsqu’on pense Transformation Numérique, on a tout de suite en tête les nouveautés technologiques. Or le succès dépend plus des aspects organisationnels et culturels. En effet, la technologie s’avère souvent plus facile à maîtriser que les changements humains.\nLes plus grands défis des entreprises consistent à recruter de nouveaux talents, à améliorer les compétences de leur personnel et à changer la culture pour devenir plus innovante et adaptable.\nOrchestration # Les étapes précédentes sont les plus faciles, même si elles demandent de se remettre en question et de se poser des questions parfois délicates sur la mission et les objectifs de l’entreprise.\nMais la mise en œuvre concrète de la Transformation Numérique est compliquée: sélectionner, prioriser et ordonnancer les actions dans des domaines transverses qui touchent souvent aux intéractions entre les humains et leur environnement est hautement sensible.\nLa plupart des programmes numériques commencent par l’expérimentation, un test contenu avec un financement dédié, les meilleurs talents et un solide soutien de la direction. Le succès à ce niveau est souvent au rendez-vous.\nCependant, mener une preuve de concept ou une expérimentation est une chose, déployer des changements à l’échelle de l’entreprise en est une autre. En effet, les obstacles sont nombreux:\nl’obtention de financement, le changement de comportement de milliers de personnes l’intégration dans les systèmes informatiques existants … La liste des embûches est longue. Plusieurs facteurs peuvent faciliter le succès:\nla définition claire des objectifs stratégiques le soutien actif des leaders de l’entreprise qui agissent comme ambassadeurs et sponsors une communication à tous les niveaux de l’entreprise une gouvernance efficace et une bonne gestion des projets Le chemin menant à la Transformation Numérique des entreprises n’est pas simple, il est parfois coûteux en investissement et en capital humain. Il nécessite souvent de profonds changements et une remise en cause des habitudes acquises.\nMais la préparation des entreprises pour les 10 prochaines est un impératif: combien d’entreprises prestigieuses et bien établies ont mis la clé sous la porte ou ne sont plus que l’ombre d’elles-mêmes faute d’avoir su s’adapter à temps. Kodak, Nokia sont souvent cités.\nAlors laisserez-vous votre entreprise louper le coche de la Transformation Numérique?\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/les-%C3%A9tapes-cl%C3%A9s-de-la-transformation-num%C3%A9rique/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\nBeaucoup d’entreprises se lancent dans la Transformation Numérique, certaines ont eu du succès dans leur voyage vers le digital mais peu ont réellement réussi la métamorphose promise par le nouveau monde digital.\u003c/p\u003e\n\u003cp\u003eIl n’existe pas de méthode universelle prête à l’emploi, ni même de cible commune à atteindre pour les dirigeants. Chaque entreprise a son secteur d’activité, son fonctionnement, son histoire, sa vision, son capital humain et ses moyens financiers.\u003c/p\u003e\n\u003cp\u003ePour autant, l’expérience fait ressortir des étapes clés qui forment les pré requis de haut niveau pour réussir la Transformation Numérique de toute entreprise.\u003c/p\u003e\n\u003chr\u003e\n\n\u003ch2 class=\"relative group\"\u003eObserver son environnement \n    \u003cdiv id=\"observer-son-environnement\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#observer-son-environnement\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eLa première des étapes consiste à apprendre des autres entreprises dans son secteur d’activité mais aussi en dehors pour élargir sa vision. C’est ce le sujet d’un séminaire organisé en Novembre par le Forum Économique Mondial, le World Economic Forum avec plus d’une vingtaine de grands dirigeants.\u003c/p\u003e","title":"Les Étapes Clés De La Transformation Numérique","type":"posts"},{"content":" Introduction # Dans un monde où les systèmes logiciels deviennent de plus en plus complexes, il est essentiel de concevoir des architectures qui reflètent fidèlement les besoins métier. C’est précisément l’objectif du Domain-Driven Design (DDD), une approche introduite par Eric Evans en 2003, qui place le domaine métier au cœur de la conception logicielle.\nMais DDD n’est pas qu’une méthode de modélisation. C’est une philosophie qui influence profondément l’architecture applicative, en guidant la structuration des composants, la définition des responsabilités, et la communication entre les parties du système.\nDans cet article, nous allons explorer les principes fondamentaux du DDD, et montrer comment ils s’intègrent dans une architecture applicative moderne, notamment en contexte microservices.\n1. Le Domaine comme Source de Vérité # Le premier principe du DDD est que le domaine métier doit être la source principale de vérité dans la conception du logiciel. Cela signifie que les décisions techniques doivent découler des besoins métier, et non l’inverse.\nExemple : # Dans une application de gestion de prêts bancaires, les règles de calcul des intérêts, les conditions d’éligibilité, et les processus de validation doivent être modélisés en priorité, avant de penser à la base de données ou au framework utilisé.\nImpact sur l’architecture : # Les couches techniques (base de données, UI, etc.) sont au service du domaine Le modèle métier devient le cœur de l’application On évite les architectures “data-centric” où les entités sont juste des tables 2. Le Langage Ubiquitaire # Le langage ubiquitaire est un vocabulaire commun partagé entre les développeurs et les experts métier. Il est utilisé dans :\nLes discussions Le code La documentation Exemple : # Si les experts parlent de “demande de prêt”, le code doit contenir une classe DemandeDePret, et non LoanRequestDTO.\nImpact sur l’architecture : # Les noms des classes, méthodes et modules reflètent le langage métier Le code devient plus lisible et plus maintenable Les erreurs de compréhension entre métier et technique sont réduites 3. Le Bounded Context # Un bounded context est une frontière explicite autour d’un modèle métier cohérent. Il permet de gérer les variations sémantiques et d’éviter les conflits de sens.\nExemple : # Dans un système e-commerce :\nLe mot “Client” dans le contexte de facturation représente une entité juridique Dans le contexte marketing, il représente un profil comportemental Impact sur l’architecture : # Chaque bounded context peut être implémenté comme un microservice Les modèles ne sont pas partagés entre contextes La communication se fait via des interfaces bien définies (API, événements) 4. Les Entités et les Valeurs # DDD distingue deux types d’objets métier :\nEntités : ont une identité unique et persistent dans le temps (ex : Client, Commande) Objets valeur : sont définis par leurs attributs et sont immuables (ex : Adresse, Montant) Exemple : # Deux adresses identiques sont considérées comme le même objet valeur, mais deux clients avec le même nom sont des entités distinctes.\nImpact sur l’architecture : # Les entités sont gérées par des repositories Les objets valeur sont imbriqués dans les entités Cela favorise une modélisation riche et précise 5. Les Agrégats # Un agrégat est un regroupement d’entités et de valeurs qui forment une unité de cohérence transactionnelle. Il a une racine (aggregate root) qui contrôle l’accès aux autres éléments.\nExemple : # Une Commande est un agrégat :\nRacine : Commande Entités internes : LigneCommande Objets valeur : AdresseLivraison, Montant Impact sur l’architecture : # Les opérations métier passent par la racine de l’agrégat Les agrégats sont chargés et persistés en une seule unité Cela améliore la consistance et la scalabilité 6. Les Services Métier # Quand une logique métier ne peut pas être placée dans une entité ou un objet valeur, elle est encapsulée dans un service métier.\nExemple : # Le calcul du taux d’intérêt d’un prêt peut être implémenté dans un service CalculateurTaux.\nImpact sur l’architecture : # Les services métier sont stateless Ils sont orientés domaine, pas infrastructure Ils facilitent la réutilisation et la testabilité 7. Les Repositories # Les repositories sont des interfaces qui permettent de récupérer et persister les entités et agrégats. Ils masquent les détails techniques de la base de données.\nExemple : # Un CommandeRepository permet de :\nfindById(id) save(commande) Impact sur l’architecture : # Le domaine reste indépendant de la persistance Les tests peuvent être faits avec des implémentations en mémoire Cela favorise une architecture hexagonale (ou ports \u0026amp; adapters) 8. Les Domain Events # Les domain events représentent des faits métier significatifs qui se sont produits. Ils permettent de découpler les composants et de réagir aux changements.\nExemple : # CommandeValidée ClientInscrit ProduitMisÀJour Impact sur l’architecture : # Les événements peuvent être publiés et consommés par d’autres services Cela facilite une architecture réactive et asynchrone Les événements peuvent être persistés pour l’audit ou le CQRS 9. L’Architecture Hexagonale # DDD s’intègre parfaitement avec l’architecture hexagonale, qui sépare :\nLe domaine (au centre) Les interfaces (UI, API, DB, etc.) Les adaptateurs (implémentations techniques) Exemple : # Le domaine ne connaît pas la base de données, mais expose un ClientRepository. L’implémentation est injectée via un adaptateur.\nImpact sur l’architecture : # Le domaine est isolé et testable Les dépendances sont inversées Cela facilite le changement technologique sans impacter le métier 10. La Collaboration avec les Experts Métier # DDD repose sur une collaboration étroite entre développeurs et experts métier. Le but est de construire un modèle partagé qui reflète fidèlement la réalité métier.\nExemple : # Lors de la conception d’un système de gestion de sinistres, les développeurs doivent comprendre :\nLes types de sinistres Les processus de validation Les règles d’indemnisation Impact sur l’architecture : # Le modèle métier est plus riche Les décisions techniques sont alignées avec les besoins réels Le logiciel devient un outil stratégique pour l’entreprise Conclusion # Le Domain-Driven Design n’est pas une simple méthode de modélisation. C’est une philosophie de conception qui transforme la manière dont les logiciels sont pensés, construits et maintenus.\nEn plaçant le domaine métier au centre, en définissant des bounded contexts clairs, en utilisant un langage ubiquitaire, et en structurant l’architecture autour des agrégats, services, repositories et événements, DDD permet de construire des systèmes robustes, évolutifs et alignés avec les besoins métier.\nDans un monde de plus en plus orienté microservices, DDD offre une boussole stratégique pour éviter les architectures fragmentées et incohérentes. Il ne s’agit pas seulement de découper le code, mais de modéliser la réalité métier avec rigueur et intelligence.\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/les-principes-fondamentaux-du-domain-driven-design-ddd/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#introduction\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eDans un monde où les systèmes logiciels deviennent de plus en plus complexes, il est essentiel de concevoir des architectures qui reflètent fidèlement les besoins métier. C’est précisément l’objectif du \u003cstrong\u003eDomain-Driven Design (DDD)\u003c/strong\u003e, une approche introduite par \u003cstrong\u003eEric Evans\u003c/strong\u003e en 2003, qui place le \u003cstrong\u003edomaine métier\u003c/strong\u003e au cœur de la conception logicielle.\u003c/p\u003e\n\u003cp\u003eMais DDD n’est pas qu’une méthode de modélisation. C’est une philosophie qui influence profondément l’\u003cstrong\u003earchitecture applicative\u003c/strong\u003e, en guidant la structuration des composants, la définition des responsabilités, et la communication entre les parties du système.\u003c/p\u003e","title":"Les Principes Fondamentaux du Domain-Driven Design (DDD)","type":"posts"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/microservices/","section":"Tags","summary":"","title":"Microservices","type":"tags"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/mod%C3%A9lisation/","section":"Tags","summary":"","title":"Modélisation","type":"tags"},{"content":"Introduction\nDans le monde numérique actuel, l’architecture informatique est ce que les fondations sont à un gratte-ciel. Elle définit comment les systèmes sont conçus, organisés, et interconnectés pour répondre à des objectifs métiers précis. Une bonne architecture permet de réduire les coûts, d’augmenter la résilience et de garantir l’agilité dans un environnement en perpétuelle mutation.\nCe billet explore les grands types d’architecture informatique : architecture d’entreprise, architecture de solution, architecture applicative, architecture technique, et bien plus encore.\n1. L’Architecture d’Entreprise : Le Cadre Stratégique # L’architecture d’entreprise est une vision globale qui aligne les systèmes informatiques sur les objectifs business.\nObjectifs : # L\u0026rsquo;architecture d\u0026rsquo;entreprise permet d\u0026rsquo;aligner les parties prenantes, d\u0026rsquo;optimiser les actifs et technologies, de sécuriser les évolutions au travers des trois objectifs:\nHarmoniser la stratégie métier et la stratégie technologique Identifier les redondances et les inefficacités Créer une cartographie des capacités, des processus et des technologies Composants : # L\u0026rsquo;architecture d\u0026rsquo;entreprise est globale et se doit de faire participer tous les acteurs, des affaires aux experts technologiques afin de disposer d\u0026rsquo;une vision complète et juste du système d\u0026rsquo;information. Pour se faire, elle se décline en:\nArchitecture métier : processus, rôles, règles Architecture des données : modèles, flux, gouvernance Architecture des applications : catalogue des applications Architecture technologique : infrastructures, réseaux, sécurité Méthodologies populaires : # Au cours de ces nombreuses décennies d\u0026rsquo;existence, l\u0026rsquo;architecture d\u0026rsquo;entreprise a pu voir émerger des cadres méthodologiques partagés et répondant aux besoins, les principaux sont:\nTOGAF (The Open Group Architecture Framework) Zachman Framework 2. L’Architecture de Solution : Le Design pour un Problème Précis # Quand une entreprise lance un projet spécifique — comme un nouveau service web ou une application mobile — l’architecture de solution intervient.\nObjectif : # Définir une solution cohérente, durable et intégrée au système existant\nÉtapes clés : # Analyse des exigences fonctionnelles et non-fonctionnelles Choix technologiques (cloud, bases de données, API) Modélisation technique : diagrammes, processus, flux Exemples : # Mise en œuvre d’un CRM Portail client intégré à un ERP La solution doit être modulaire, scalable et interopérable pour anticiper l’évolution future.\n3. L’Architecture Applicative : L’Organisation des Composants Logiciels # C’est le niveau où le code rencontre la conception. L’architecture applicative décrit la structure interne d’une application, ses composants, leur logique et leurs interactions.\nTypes d’architectures applicatives : # Architecture Description Monolithique Tout est regroupé dans une seule application. Facile à déployer, mais difficile à maintenir à grande échelle. Microservices L’application est décomposée en services indépendants. Favorise l’agilité et la résilience. Event-driven Réagit aux événements, idéal pour les systèmes réactifs ou à forte interaction. Serverless Pas de gestion des serveurs, fonctionnement par fonctions déclenchées. Scalable et économique. Bonnes pratiques : # Séparation des responsabilités (modèle MVC, architecture hexagonale) Gestion centralisée des erreurs et des logs Documentation des API 4. L’Architecture Technologique : Infrastructure et Outils # L’architecture technique porte sur les fondations physiques et virtuelles qui permettent de faire fonctionner les logiciels.\nComposants clés : # Serveurs (cloud ou on-premise) Réseau (LAN/WAN, pare-feu, VPN) Sécurité (authentification, chiffrement) Middleware (ESB, brokers, bus de messages) Tendances actuelles : # Infrastructure-as-Code (Terraform, Ansible) Conteneurisation (Docker, Kubernetes) Cloud hybride et multicloud (Azure, AWS, GCP) 5. Les Défis et Enjeux de l’Architecture Informatique # L’architecture n’est pas figée. Elle évolue avec :\nLes besoins métiers La pression technologique Les menaces de cybersécurité Principaux défis : # Maintenir l’agilité sans compromettre la sécurité Réduire la dette technique Assurer la cohérence des données Favoriser l\u0026rsquo;interopérabilité 6. L’Architecte Informatique : Stratège et Designer # Le rôle de l’architecte évolue entre stratégie, conseil et réalisation technique.\nSes missions : # Accompagner les équipes techniques Traduire les besoins business en solutions techniques Garantir la cohérence des systèmes Compétences recherchées : # Connaissances en frameworks d’architecture Expertise en cloud, DevOps, cybersécurité Sens de l’analyse et de la communication Conclusion # L’architecture informatique est une discipline essentielle pour toute entreprise désireuse d\u0026rsquo;innover, de se transformer ou simplement de fonctionner de façon efficace. Qu’il s’agisse de guider les choix stratégiques, d\u0026rsquo;optimiser les processus ou d\u0026rsquo;assurer la scalabilité des solutions, l’architecture joue un rôle d’orchestrateur invisible.\nDans ce ballet technologique, elle permet aux équipes techniques et métiers de danser au même rythme.\nSouhaites-tu que je le transforme en page thématique, que je l’illustre visuellement, ou même que je te propose une version plus accessible pour un public non technique ?\n","date":"5 août 2025","externalUrl":null,"permalink":"/posts/presentation-architecture-informatique/","section":"Posts","summary":"\u003cp\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e\u003cbr\u003e\nDans le monde numérique actuel, l’architecture informatique est ce que les fondations sont à un gratte-ciel. Elle définit comment les systèmes sont conçus, organisés, et interconnectés pour répondre à des objectifs métiers précis. Une bonne architecture permet de réduire les coûts, d’augmenter la résilience et de garantir l’agilité dans un environnement en perpétuelle mutation.\u003c/p\u003e\n\u003cp\u003eCe billet explore les grands types d’architecture informatique : \u003cstrong\u003earchitecture d’entreprise, architecture de solution, architecture applicative, architecture technique\u003c/strong\u003e, et bien plus encore.\u003c/p\u003e\n\u003chr\u003e\n\n\u003ch2 class=\"relative group\"\u003e1. L’Architecture d’Entreprise : Le Cadre Stratégique \n    \u003cdiv id=\"1-larchitecture-dentreprise--le-cadre-stratégique\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#1-larchitecture-dentreprise--le-cadre-strat%c3%a9gique\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eL’architecture d’entreprise est une vision globale qui aligne les systèmes informatiques sur les objectifs business.\u003c/p\u003e","title":"Présentation de l’architecture en informatique","type":"posts"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/r%C3%B4les/","section":"Tags","summary":"","title":"Rôles","type":"tags"},{"content":"","date":"5 août 2025","externalUrl":null,"permalink":"/tags/togaf/","section":"Tags","summary":"","title":"TOGAF","type":"tags"},{"content":"","date":"4 octobre 2021","externalUrl":null,"permalink":"/tags/architecture-technologique/","section":"Tags","summary":"","title":"Architecture Technologique","type":"tags"},{"content":" Tribune – Comparaison des géants du Cloud Computing ou Informatique Infonuagique # KINSTA est un hébergeur de sites WordPress américain qui propose sur son blog des articles approfondis sur différents thèmes. En lisant AWS vs Azure en 2021 (Comparing the Cloud Computing Giants), j’ai trouvé des points intéressants que je vais partager avec vous.\nLes acteurs du Cloud Computing\nLe premier constat est que la forte croissance de la demande en cloud computing s’accompagne d’une multiplication des services et options: c’est logique, plus on vise large, plus il faut s’adapter à différents usages et plus il faut proposer de produits.\nChaque fournisseur de cloud computing construit donc petit à petit son propre écosystème de produits, services et partenaires. Aussi bien dans le IaaS (Infrastructure as a Service), le PaaS (Platform as a Service) ou le SaaS (Software as a Service).\nEt même si AWS et Azure se rejoignent sur les fonctionnalités, chacun conserve son propre vocabulaire et son propre modèle tarifaire.\nAlors que le monde du cloud computing comporte davantage d’acteurs, l’article se concentre sur les deux leaders Amazon AWS et Microsoft Azure selon le Quadrant Magique du GARTNER:\nhttps://lh3.googleusercontent.com/ApXWRvlnc0EzqChSaOVayUDeSSJhqo2IyZeZ9MRdZSUVr6fh6oE-9ZmANP-DKNJl3DyvR-EZnHlW3bRtn5ijOBywBfl6vhl-5jGzhUJw3LKDKmIvssVbzTanachLbkHDVsH0UEnf=s0\nlien: https://www.gartner.com/en/documents/3989743/magic-quadrant-for-cloud-infrastructure-and-platform-ser\nLes deux acteurs concentrent 50% des dépenses de cloud computing selon l’étude de CANALYS du T3 2020.\nEt la pandémie a boosté l’usage des technologies de l’information avec le télétravail et l’ecommerce. Cela se traduit par une croissance des dépenses de cloud computing.\nFonctionnalités de calcul # Amazon Elastic Compute Cloud (Amazon EC2) Microsoft Azure Virtual Machines Les deux géants offrent des produits similaires même si le vocabulaire est différent. AWS se montrant un peu plus ouvert sur les formats d’import de VM.\nOn trouve quelques différences sur les accès supplémentaires aux VM, Powershell pour Azure, gestionnaire de session pour AWS.\nLes types d’instances proposés sont variés avec chaque acteur proposant sa gamme mais au final chacun peut y trouver son compte.\nPour se fournir en image, AWS et Azure ont chacun leur propre place de marché d’images proposées par des fournisseurs tiers. Mais seul AWS propose un service de répertoire publique d’images de conteneurs.\nSur la question des performances, la comparaison d’offres et d’usages aussi variés n’est pas simple. Toutefois, une étude de Cockroach Labs fait apparaître GCP (Google Cloud Platform) et AWS en tête selon les configurations et Azure en troisième position. Mais là encore, un POC avec un cas d’usage pertinent permettra de mieux faire son choix.\nFonctionnalités de réseau # les points d’accès réseau AWS les points d’accès réseau Azure Là aussi les offres de produits sont similaires mais la présence physique des centres de données donne l’avantage à AWS qui domine le secteur. Mais Azure continue son déploiement avec l’objectif de rattraper son rival.\nLes réseaux de diffusion de contenu (CDN) sont similaires mais la gestion des DNS donnent un avantage à AWS avec des caractéristiques non encore prises en charge par Azure.\nEn termes de latence, l’étude de Cockroach Labs consacre AWS devant Azure et GCP.\nMais ici aussi, des tests en situation réelle montreront des résultats adaptés à votre situation.\nPour aller plus loin sur les fonctionnalités réseau d’Azure voir: Microsoft Cloud Azure: tout savoir sur le réseau.\nFonctionnalités de stockage # Les offres de stockage se décomposent en:\nStockage d’objets distribués : Stockage redondant de valeurs clés dans lequel vous pouvez stocker des objets de données. Amazon Simple Storage Service (S3) et Azure Blob Storage. Stockage en bloc : Volumes de disques virtuels que vous pouvez attacher à une instance de VM. Amazon Elastic Block Store (EBS) et Azure Disk Storage. Stockage de fichiers : Conçu pour le stockage sur un serveur de fichiers. Amazon Elastic File System (EFS) et Azure Files. AWS offre des performances supérieures dans le haut de gamme. Stockage à froid : Conçu pour le stockage des sauvegardes. AWS gère ce service au travers des classes de stockage de S3. Azure gère ce service au travers des niveaux d’accès des Blob Storage. Stockage à froid (archives) : Conçu pour le stockage de données d’archives à des fins de conformité ou d’analyse. AWS gère ce service au travers des classes de stockage de S3. Azure gère ce service grâce aux accès tiers de Blob Storage. Dans l’ensemble, les services des deux fournisseurs sont similaires.\nFonctionnalités de sécurité # Il s’agit d’un point essentiel mis en avant par AWS et Azure. En effet, le Cloud doit son succès au sentiment de confiance qu’inspire ses offres. En particulier, la sécurité étant un critère de premier plan dans le Cloud, les deux acteurs ont davantage de moyens à allouer à la sécurité que la majorité de leurs clients. En effet, la sécurité est un domaine qui intervient à tous les niveaux du système d’information, sur les infrastructures, les middleware, les applications, les outils, les postes d’accès, les réseaux, les connexions avec l’extérieur (fournisseurs, partenaires)… Le schéma ci-dessous illustre cette problématique:\nhttps://lh6.googleusercontent.com/xk7FR4RXtI6_-IRaAZn_20v1czuy_GygxB7O6ZN0xwcWUBLjHs5-EhV9EXRizO-uP0nWwLquE7PET6Teep6OWgLOzfcGXEx-fjVezZ1CcKPuv6zQMoq9_odN_JNf-TPktlQJ_xW1=s0\nLes deux géants du Cloud ont réussi à monter des offres qui prennent en compte\nla sécurité de leurs infrastructures Cloud, la sécurité à l’intérieur des applications de leurs clients (authentification, autorisations, audits, traces…) et notamment la compliance, la sécurité jusqu’aux infrastructures des clients (chiffrement, VPN, filtrage, SSA, gestion des identités…) Support et tarification # AWS et Azure proposent un support en ligne basé sur une documentation abondante, des cas d’utilisation et des forums de discussion. Un support payant est aussi disponible.\nEn termes de tarification, les offres AWS et Azure étant tellement larges, il est impossible de les départager de manière globale. Et les coûts varient en fonction de la localisation, des volumes de charge CPU, de stockage, de transfert réseau, d’options… Pour se faire une idée, il est nécessaire de créer une situation typique des besoins et de modéliser la configuration chez chacun des fournisseurs avec les outils de calcul des coûts: AWS Pricing Calculator et Azure Pricing Calculator.\nConclusion # Pour conclure, il revient à chaque organisation de décider quel est le meilleur fournisseur pour répondre à ses besoins particuliers en termes de répartition géographiques, fonctionnalités, sécurité, tarification et support.\n","date":"4 octobre 2021","externalUrl":null,"permalink":"/posts/aws-vs-azure/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eTribune – Comparaison des géants du Cloud Computing ou Informatique Infonuagique \n    \u003cdiv id=\"tribune--comparaison-des-géants-du-cloud-computing-ou-informatique-infonuagique\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#tribune--comparaison-des-g%c3%a9ants-du-cloud-computing-ou-informatique-infonuagique\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eKINSTA est un hébergeur de sites WordPress américain qui propose sur son blog des articles approfondis sur différents thèmes. En lisant AWS vs Azure en 2021 (Comparing the Cloud Computing Giants), j’ai trouvé des points intéressants que je vais partager avec vous.\u003c/p\u003e\n\u003cp\u003eLes acteurs du Cloud Computing\u003c/p\u003e\n\u003cp\u003eLe premier constat est que la forte croissance de la demande en cloud computing s’accompagne d’une multiplication des services et options: c’est logique, plus on vise large, plus il faut s’adapter à différents usages et plus il faut proposer de produits.\u003c/p\u003e","title":"AWS Vs Azure","type":"posts"},{"content":"","date":"20 août 2021","externalUrl":null,"permalink":"/tags/cpu/","section":"Tags","summary":"","title":"CPU","type":"tags"},{"content":" Introduction # Depuis les débuts de l’informatique, les ingénieurs ont cherché à reproduire les capacités cognitives humaines à travers des machines. Si les ordinateurs classiques ont permis des avancées spectaculaires dans le calcul, la logique et la communication, ils restent fondamentalement différents du cerveau humain dans leur fonctionnement. C’est dans ce contexte qu’émerge une discipline fascinante : l’architecture neuromorphique, qui vise à concevoir des systèmes informatiques inspirés du fonctionnement biologique du cerveau.\nCette approche ne se contente pas de simuler des réseaux de neurones artificiels comme ceux utilisés dans l’intelligence artificielle classique. Elle cherche à reproduire physiquement et structurellement les mécanismes neuronaux, synaptiques et sensoriels du cerveau humain dans des circuits électroniques. L’objectif ? Créer des machines plus intelligentes, plus efficaces énergétiquement, et capables d’apprendre et de s’adapter comme les êtres vivants.\n1. Qu’est-ce que l’architecture neuromorphique ? # Le terme « neuromorphique » a été introduit dans les années 1980 par Carver Mead, pionnier de l’électronique analogique et de la neuro-ingénierie. Il désigne une approche de conception de circuits électroniques qui s’inspire directement de la structure et du fonctionnement du système nerveux.\nContrairement aux architectures classiques fondées sur le modèle de von Neumann (séparation entre mémoire et unité de traitement), les architectures neuromorphiques cherchent à intégrer le traitement et la mémoire dans un même système, à l’image des neurones biologiques.\nPrincipes clés # Traitement parallèle massif : comme le cerveau, ces systèmes traitent l’information simultanément dans de nombreux nœuds. Événements asynchrones : les neurones ne s’activent que lorsqu’un signal est reçu, ce qui réduit la consommation énergétique. Plasticité synaptique : les connexions entre neurones peuvent évoluer, permettant l’apprentissage. Codage temporel : l’information est encodée dans le timing des impulsions, et non dans des valeurs numériques fixes. 2. Le cerveau comme modèle # Le cerveau humain est une merveille d’efficacité. Il consomme environ 20 watts, soit l’équivalent d’une ampoule basse consommation, pour gérer des milliards de neurones et trillions de connexions synaptiques. Il est capable de reconnaître des visages, de comprendre des langues, de prendre des décisions complexes, et d’apprendre en continu.\nComparaison cerveau vs ordinateur # Caractéristique Cerveau humain Ordinateur classique Nombre de neurones ~86 milliards Quelques cœurs CPU Connexions \u0026gt;100 trillions Bus et registres Énergie ~20 W 100–500 W Apprentissage Continu, adaptatif Supervisé, rigide Traitement Massivement parallèle Séquentiel ou limité L’architecture neuromorphique cherche à répliquer cette efficacité et cette plasticité dans des systèmes électroniques.\n3. Les composants d’un système neuromorphique # Un système neuromorphique repose sur plusieurs éléments clés :\na) Les neurones artificiels # Ce sont des unités de traitement qui simulent le comportement des neurones biologiques. Ils reçoivent des signaux, les intègrent, et déclenchent une impulsion si un seuil est atteint.\nb) Les synapses électroniques # Elles modulent la force des connexions entre neurones. Certaines technologies utilisent des memristors, des composants capables de mémoriser une résistance variable, pour simuler la plasticité synaptique.\nc) Le codage par impulsions (spiking) # Contrairement aux réseaux neuronaux classiques qui utilisent des valeurs continues, les systèmes neuromorphiques utilisent des spiking neural networks (SNN), où l’information est transmise sous forme d’impulsions discrètes dans le temps.\nd) L’apprentissage local # L’apprentissage se fait souvent selon des règles biologiques comme Spike-Timing Dependent Plasticity (STDP), où la force synaptique dépend du timing relatif entre les impulsions du neurone pré- et post-synaptique.\n4. Les avantages de l’architecture neuromorphique # Efficacité énergétique # Les systèmes neuromorphiques consomment beaucoup moins d’énergie que les architectures classiques, car ils n’activent les neurones que lorsque c’est nécessaire.\nApprentissage en temps réel # Ils peuvent apprendre de manière non supervisée, en continu, sans avoir besoin de vastes ensembles de données annotées.\nTemps de réponse rapide # Le traitement parallèle et le codage temporel permettent des réponses rapides, idéales pour les applications embarquées.\nAdaptabilité # Ces systèmes peuvent s’adapter à des environnements changeants, comme le ferait un organisme vivant.\n5. Exemples de projets et de puces neuromorphiques # Intel Loihi # Intel a développé Loihi, une puce neuromorphique capable de simuler des millions de neurones et de synapses. Elle est utilisée pour des recherches en robotique, perception sensorielle, et IA embarquée.\nIBM TrueNorth # IBM a conçu TrueNorth, une puce avec 1 million de neurones et 256 millions de synapses. Elle consomme moins de 100 mW et est utilisée pour la reconnaissance d’images et de sons.\nBrainScaleS (Heidelberg) # Ce projet européen combine électronique analogique et numérique pour simuler des réseaux neuronaux biologiques à grande échelle.\nHala Point (Intel, 2025) # La puce Hala Point, annoncée comme la plus grande architecture neuromorphique jamais conçue, contient 1,15 milliard de neurones artificiels et 120 milliards de synapses, surpassant même le cerveau humain en densité de traitement.\n6. Applications concrètes # Robotique autonome # Les robots équipés de puces neuromorphiques peuvent percevoir leur environnement, prendre des décisions rapides, et s’adapter à des terrains inconnus.\nInterfaces cerveau-machine # Les architectures neuromorphiques sont idéales pour interpréter les signaux neuronaux humains et les traduire en commandes informatiques.\nSanté mentale et neurologie # Des simulations de circuits cérébraux peuvent aider à comprendre des maladies comme Alzheimer, Parkinson ou l’épilepsie.\nAppareils mobiles et IoT # Grâce à leur faible consommation, ces puces peuvent être intégrées dans des smartphones, montres connectées, ou capteurs intelligents.\n7. Limites et # ","date":"20 août 2021","externalUrl":null,"permalink":"/posts/l-architecture-neuromorphique/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003eIntroduction \n    \u003cdiv id=\"introduction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#introduction\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eDepuis les débuts de l’informatique, les ingénieurs ont cherché à reproduire les capacités cognitives humaines à travers des machines. Si les ordinateurs classiques ont permis des avancées spectaculaires dans le calcul, la logique et la communication, ils restent fondamentalement différents du cerveau humain dans leur fonctionnement. C’est dans ce contexte qu’émerge une discipline fascinante : \u003cstrong\u003el’architecture neuromorphique\u003c/strong\u003e, qui vise à concevoir des systèmes informatiques inspirés du fonctionnement biologique du cerveau.\u003c/p\u003e\n\u003cp\u003eCette approche ne se contente pas de simuler des réseaux de neurones artificiels comme ceux utilisés dans l’intelligence artificielle classique. Elle cherche à \u003cstrong\u003ereproduire physiquement et structurellement\u003c/strong\u003e les mécanismes neuronaux, synaptiques et sensoriels du cerveau humain dans des circuits électroniques. L’objectif ? Créer des machines plus intelligentes, plus efficaces énergétiquement, et capables d’apprendre et de s’adapter comme les êtres vivants.\u003c/p\u003e","title":"L’architecture neuromorphique : quand l’informatique imite le cerveau","type":"posts"},{"content":"Je viens de parcourir le rapport du Boston Consulting Group, “Most Innovative Companies 2021 – Overcoming the Innovation Readiness Gap – April 2021”. Voyons comment innover en Architecture IT.\nCe rapport synthétise les entretiens avec 1500 responsables de l’innovation dans le monde.\nLe point important à souligner est que l’innovation est devenue une des trois principales priorités de leurs entreprises.\nAvant de voir comment l’innovation s’applique à l’architecture IT, parcourons ce rapport.\nUn des aspects frappant en regardant la liste des 50 compagnies les plus innovantes est la prédominance des entreprises technologiques.\nhttps://lh5.googleusercontent.com/pVzUpXjuzbLd9xzLw4ALdQWdpUAXd3JpBpXXenKwjzdq7L3mqUSk-pG8m5zMdHyruEs82mlSE40_WK5lcMYNGzkch0RHrj4QjJQmrKTN4bxO4aK9mVN4bVaCUXkbcnbL7yIJ1o7Q\nlien: https://web-assets.bcg.com/93/a7/7d03fff34baa993929c81f220e72/bcg-most-innovative-companies-2021-apr-2021-r.pdf\nPour ceux qui, comme moi, baignent dans une culture technique, on peut se dire que c’est logique, la technologie, c’est l’innovation.\nMais en fait, pas vraiment…\nCar même des entreprises technologiques mondiales innovent parfois plus par leurs pratiques, leur gestion, leur production ou leur capacité à attirer et fidéliser des talents que par des avancées techniques.\nAnalyse des entreprises innovantes # En effet, dans les 10 plus innovantes, on a des entreprises de matériel ou logiciels technologiques, mais aussi une entreprise qui mixe un site e-commerce majeur (AMAZON) et un fournisseur de technologies (AWS), une entreprise de production de véhicules électriques (TESLA) et un laboratoire pharmaceutique (PFIZER).\nUn autre axe d’analyse est la nationalité des entreprises de ce classement.\nLes États-Unis sont majoritairement représentés mais on retrouve la Corée du Sud, la Chine et le Japon avec un représentant chacun dans le top 10.\nMais peut-on encore attribuer une multinationale tentaculaire à un état?\nPeut-être pour l’approche en termes de gestion et de développement.\nMais la plupart possèdent des entités de recherche, de production et de commercialisation dans de nombreux pays.\nPour la première place, pas de surprise, Apple est indétrônable. L’entreprise arrive à surfer sur les tendances, à se renouveler et à satisfaire ses clients, ses employés et ses actionnaires.\nMais le COVID-19 a permis à certaines entreprises de montrer qu’elles sont capables d’innover pour s’adapter à une situation nouvelle:\nPfizer, Moderna et Merck \u0026amp; Company ont réussi à créer un vaccin en moins d’un an: ce qui implique pour ces grandes structures d’innover dans leurs processus de R\u0026amp;D, de conception et de production.\nAbbott Labs a réussi l’exploit de fournir un test de dépistage en quelques semaines.\nAmazon et Walmart ont adapté leurs logistiques pour tenir compte des nouvelles contraintes.\nComment le classement des entreprises innovantes a évolué depuis 20 ans? # https://lh6.googleusercontent.com/iEeLlaqbcsT3tTVKhY185PfXraOvQTw-pjM_zwCeKtfAZdvHnxHHTsTv4IC9gmuC8RDee9XXBeECvaTMfpj1pfjbNEXyLYJ_baX-6tibIBDZtXhUdRJzZ-wprRWDryXbGSsvO6kA lien: https://fr.statista.com/infographie/24636/classement-des-entreprises-les-plus-innovantes-au-monde-annees-2000-2021/\nQuels sont les facteurs clés de l’innovation? # Tous les secteurs sont donc favorables à l’innovation. Mais qu’est-ce qui différencie donc les entreprises innovantes des autres?\nLe Boston Consulting Group identifie 5 facteurs de différenciation:\nhttps://lh5.googleusercontent.com/D7ICxyMR8jcmi-V1pG_sviCVKMrPEY-NSVJaX9YdeIFuAgAiS7-RCpLsvfLJCXK0wwnErgbo3-FqdDgaCBdWJxv1as39YGSTiFQZULRCdSeJsXP0oCqLB6wUBGKYMx7RlynusTfr lien: https://web-assets.bcg.com/93/a7/7d03fff34baa993929c81f220e72/bcg-most-innovative-companies-2021-apr-2021-r.pdf\nAvoir des ambitions claires: pourquoi innover et dans quels buts? Dans quel domaine innover: où saisir des opportunités et faire la différence, pour quels avantages ? Gestion de la performance: construire des indicateurs sur les vrais facteurs de succès, reconnaître les leaders qui poussent de nouvelles idées mais qui savent aussi reconnaître des erreurs et les stopper rapidement. Gestion des projets: l’innovation a besoin d’équipes habiles et multidisciplinaires qui prennent en compte les signaux externes du marché ainsi que les avis des clients. Ces équipes doivent être de petite taille, autonomes et libres de prendre leurs décisions. Gestion des talents et de la culture: l’innovation doit être valorisée et les meilleurs talents doivent y être assignés. Les entreprises qui réussissent le mieux savent entretenir une saine collaboration entre tous les services, en particulier entre les ventes, le marketing et la R\u0026amp;D: un dysfonctionnement entre ces trois groupes est la clé pour améliorer le rendement des investissements en termes d’innovation.\nBonne nouvelle pour le monde IT # Alors comment innover en architecture IT? La transformation numérique est aujourd’hui une priorité absolue pour les 75% des dirigeants. Et 65% des entreprises accélèrent dans cette direction.\nPour y arriver, BCG a identifié 6 facteurs de succès:\naligner la stratégie numérique et la stratégie business un engagement fort du PDG jusqu’au autres niveaux de management un noyau de talents reconnus dans le digital des données et technologies flexibles avec des plateformes digitales, une gouvernance agile un suivi efficace des progrès vers les buts à atteindre Les organisations peuvent mettre du temps à se transformer. Mais la multiplication d’équipes agiles spécialisées qui opèrent des changements en continue par itération, conduit à des améliorations visibles. Pour conclure, BCG indique que savoir écouter ses clients afin d’orienter sa R\u0026amp;D et savoir prendre des risques sont les deux clés essentielles pour devenir des leaders de l’innovation.\nAlors pour vous, comment se positionne votre entreprise ou votre client sur ces 6 facteurs de succès?\nEt comment appliquez-vous ces ingrédients du succès dans votre travail au quotidien?\n","date":"5 août 2021","externalUrl":null,"permalink":"/posts/comment-innover-en-architecture-it/","section":"Posts","summary":"\u003cp\u003eJe viens de parcourir le rapport du Boston Consulting Group, “Most Innovative Companies 2021 – Overcoming the Innovation Readiness Gap – April 2021”. Voyons comment innover en Architecture IT.\u003c/p\u003e\n\u003cp\u003eCe rapport synthétise les entretiens avec 1500 responsables de l’innovation dans le monde.\u003c/p\u003e\n\u003cp\u003eLe point important à souligner est que l’innovation est devenue une des trois principales priorités de leurs entreprises.\u003c/p\u003e\n\u003cp\u003eAvant de voir comment l’innovation s’applique à l’architecture IT, parcourons ce rapport.\u003c/p\u003e\n\u003cp\u003eUn des aspects frappant en regardant la liste des 50 compagnies les plus innovantes est la prédominance des entreprises technologiques.\u003c/p\u003e\n\u003cp\u003e\u003ca\n  href=\"https://lh5.googleusercontent.com/pVzUpXjuzbLd9xzLw4ALdQWdpUAXd3JpBpXXenKwjzdq7L3mqUSk-pG8m5zMdHyruEs82mlSE40_WK5lcMYNGzkch0RHrj4QjJQmrKTN4bxO4aK9mVN4bVaCUXkbcnbL7yIJ1o7Q\"\n    target=\"_blank\"\n  \u003ehttps://lh5.googleusercontent.com/pVzUpXjuzbLd9xzLw4ALdQWdpUAXd3JpBpXXenKwjzdq7L3mqUSk-pG8m5zMdHyruEs82mlSE40_WK5lcMYNGzkch0RHrj4QjJQmrKTN4bxO4aK9mVN4bVaCUXkbcnbL7yIJ1o7Q\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003elien: \u003ca\n  href=\"https://web-assets.bcg.com/93/a7/7d03fff34baa993929c81f220e72/bcg-most-innovative-companies-2021-apr-2021-r.pdf\"\n    target=\"_blank\"\n  \u003ehttps://web-assets.bcg.com/93/a7/7d03fff34baa993929c81f220e72/bcg-most-innovative-companies-2021-apr-2021-r.pdf\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePour ceux qui, comme moi, baignent dans une culture technique, on peut se dire que c’est logique, la technologie, c’est l’innovation.\u003c/p\u003e","title":"Comment Innover En Architecture IT","type":"posts"},{"content":"","date":"5 août 2021","externalUrl":null,"permalink":"/tags/innovation/","section":"Tags","summary":"","title":"Innovation","type":"tags"},{"content":"Le choix d’une Architecture Applicative est une décision déterminante en ce qui concerne l’organisation des équipes, les méthodes de travail, les technologies à utiliser, les compétences à acquérir, les interactions avec les utilisateurs internes, les clients et les partenaires… Alors quelle architecture applicative en 2021?\nPréambule # Cet article n’est pas orienté sur des choix technologiques ou des fournisseurs mais plus sur des choix architecturaux. En effet, il existe tellement de solutions techniques existantes dans tellement de cas de figure différents que nous ne pourrons pas en faire le tour avec un seul écrit. De futurs articles traiteront donc des sujets technologiques qui sont tout aussi importants.\nA noter que nous parlerons d’entreprise pour alléger le texte mais cela concerne tout aussi bien les organisations gouvernementales, les associations, les établissements d’enseignement ou tout autre forme juridique permettant d’exercer une activité.\nAvant de trouver l’Architecture Applicative qui convient le mieux à votre projet, à votre organisation, il convient de bien définir les hypothèses de départ: c’est l’objet de cet article. Parcourons ensemble les points essentiels pour définir votre Architecture Applicative.\nLe contour d’une application # Le premier aspect à avoir en tête est la nature même d’une application: ne pas la résumer à du code. Pour bien définir une Architecture Applicative, il convient de noter qu’une application englobe les aspects besoins métiers, règles d’affaire, sécurité, réglementation, gestion des données, optimisation, résilience, intégration avec l’existant, interactions avec les utilisateurs, les clients ou partenaires, roadmap, respect des directives de l’Architecture d’Entreprise…\nCommençons par se poser la question: qui utilise notre application?\nLe périmètre de l’application # La première étape est de cerner le périmètre de l’application, en terme d’utilisateurs internes, de clients, de partenaires, de fournisseurs. Quel est l’objet de l’application? Servir une petite équipe en interne ou offrir un service à des millions d’utilisateurs en ligne.\nEn effet, les cas seront traités différemment selon la nature et la localisation des utilisateurs:\nUne application purement interne pour une équipe, un service, un département, un site, un pays ou un ensemble de pays. Une application à destination des partenaires, fournisseurs ou distributeurs. Une application publique concernant un petit ou un très grand nombre d’utilisateurs au sein d’un ou plusieurs pays. Le type d’utilisateur aura notamment un impact sur les aspects de sécurité, de confidentialité et des réglementations associées. La localisation des utilisateurs sera une informations importantes car elle permettra de mettre en oeuvre ou non des stratégies d’optimisation et de disponibilité adaptées. En outre, la nature des interactions est déterminantes pour les choix:\ninterface web client desktop échanges de données (fichiers, services web, messages, API) client mobile ou tablette automate: guichets automatiques ou robots d’usine par exemple Pour avoir une large base d’utilisateurs, une interface web ou mobile est plus adaptée et sans doute moins compliqué et couteux qu’une interface pour ordinateur personnel. Les besoins métiers # Connaître les besoins d’affaire de manière exhaustive et précise n’est pas toujours simple. En effet, ce n’est pas un exercice toujours facile de lister l’ensemble des fonctionnalités dont nous allons avoir besoin. De même pour les règles d’affaire à appliquer. Et partir d’un existant pour une refont applicative n’est pas forcément plus aisé.\nIl arrive parfois qu’une application soit présente depuis plusieurs dizaines d’années et que les fonctionnalités ne soient pas complètement ou pas du tout documentées. Il faut alors replonger dans le code et en extraire les règles métier à adapter pour la nouvelle application.\nEn outre, chaque entreprise a selon son domaine d’intervention à satisfaire des contraintes légales, contractuelles ou de confidentialité. En particulier, la nature des données à gérer va influer sur les règles à respecter et les moyens à utiliser. Et même le vocabulaire peut être propre à un secteur d’activité ou à une entreprise.\nParmi les livrables:\nL’Architecture d’Entreprise donne les guides à suivre pour définir et implémenter l’Architecture Applicative. La roadmap des applications apporte des éléments pour déterminer le choix de l’architecture applicative et le calendrier à respecter. Les règles métier spécifient les comportements à respecter sur des actions ou des traitements. Les règles de validation spécifient la manière de valider des données. Les fonctionnalités spécifient les blocs fonctionnels attendus pour l’application. Les processus d’affaire ou cas d’utilisation spécifient le comportement attendu de l’application lors de son utilisation. La cartographie des composants permet de découper une application en composants qui porteront chacun un lot de fonctionnalités. Mais comme dans toute activité d’une entreprise, l’argent a son importance. Voyons comment la définition des budgets peut influencer les choix de l’Architecture Applicative.\nLe budget de l’architecture applicative # Dans un monde idéal, les besoins métiers sont étudiés dans leur globalité puis:\nUne Architecture d’Entreprise ou au moins une Architecture Applicative est alors définie globalement. De là, des choix sont faits pour chaque application ou chaque composante applicative. Les budgets sont alors chiffrés. Les projets sont lancés. Mais la réalité est souvent différente, un besoin métier est unitairement mis en avant avec un budget. A partir de ces éléments, une Architecture Applicative est définie tenant compte des contraintes de l’existant et du budget. Il en ressort une architecture de compromis. La répétition de ce scénario peut conduire à un système d’information formé d’applications qui cohabitent, sans harmonie et avec de fort besoins d’intégration. Un autre cas de figure est la migration d’une grosse application monolithique en un ensemble d’applications qui cohabitent et s’échangent des informations. Le découpage s’opère souvent au niveau des fonctionnalités, du budget mais aussi au niveau des ressources humaines. Et si il n’existe pas un cadre fort, commun et transverse à respecter, des divergences peuvent apparaître en termes de méthodes, de technologies, d’intégrations: cela a pour conséquence des coûts supplémentaires non prévus pour interfacer les différentes applications et composants.\nUne fois les choix effectués, un fonctionnement établi, des méthodes mises en place, quels sont les impacts de l’Architecture Applicative sur la vie de l’entreprise.\nLes impacts du choix de l’architecture applicative # Les choix architecturaux ont des impacts forts sur plusieurs domaines de l’entreprise, et pas seulement au niveau applicatif:\nL’existant doit plus ou moins s’adapter. Une application n’est que rarement totalement autonome et isolée. En général, de nombreuses interactions entre les systèmes sont à prévoir. Les compétences sont à développer ou à acquérir. Les méthodes sont à communiquer et appliquer. Les nouveaux fournisseurs sont à choisir, les contrats des fournisseurs existant sont à renégocier. Les partenaires sont à informer, voir font partie du projet s’ils doivent s’adapter. Les équipes internes, les utilisateurs et les personnels du SI, doivent changer leurs habitudes, voir se former. L’intégration entre composants applicatifs ou entre applications ou avec des fournisseurs et partenaires est à construire ou adapter. Les budgets, souvent annuels, sont à adapter pour tenir compte des changements technologiques ou organisationnels. Les roadmaps sont à synchroniser: une refonte d’une application ne peut pas toujours se mener de front avec une adaptation à des changements importants d’une autre application. Après avoir parlé de besoins, de budgets et d’impacts, parlons concrètement des éléments à prendre en compte pour nous aider à répondre à la question: quelle Architecture Applicative en 2021? Commençons par le type d’application, Le choix du type d’application # Comment choisir le type d’application à mettre en œuvre: achat de progiciels sur site, utilisation de progiciels SaaS, développent sur site / Cloud / hybride…\nPour faire le choix du type d’application, il est nécessaire de prendre en compte et de pondérer les éléments suivants:\nLes besoins métiers immédiats et à venir (fonctionnalités). Les projections en terme de charge de traitement et de nombre d’utilisateurs. La cible de l’Architecture d’Entreprise et les orientations qu’elle amène. L’existant en terme de matériels, d’hébergement, de fournisseurs, de contrats, d’applications, de compétences, d’organisation, de calendrier commerciale. Les ressources financières disponibles ainsi que les prévisionnels. Le niveau de rentabilité attendu. Les enjeux de l’environnement économique, sanitaire, politique et réglementaire. Détaillons un peu les possibilités pour la partie interface, le front-end.\nLe choix pour le Frontend # La partie visible de l’application est souvent la plus mise en avant par les utilisateurs ou clients même si le moteur caché de l’application est tout aussi important. L’entreprise doit balancer les coûts, la pérennité des technologies et fournisseurs, l’adaptation aux goûts du jour pour ne pas paraître en retard, la sécurité et la facilité d’intégration.\nLes possibilités offertes pour le frontend sont variées:\nweb principalement HTML et Javascript (pages web) web purement Javascript (application web) web avec des pages HTML générées dynamiquement par le backend. écran 3270 pour mainframe desktop Java desktop Native (C, C++, C#…) desktop Web (Electron…) mobile, tablette (iOS, Android) automate grand public (guichet de banque ou de vente de titre de transport, de validation de billet d’avion…) automate spécialisé (machine outil, robot industriel…) aucun: communication par des échanges de données Dans la plupart des cas, le choix sera vite fait car la nature même des besoins d’affaire va cerner une ou quelques possibilités.\nVous avez déterminé quel est le meilleur choix pour réaliser la partie visible de votre application, cherchons maintenant à trouver comment implémenter la mécanique invisible et tout aussi cruciale, le backend.\nLe choix pour le Backend # Quelle forme l’application va-t-elle prendre dans les coulisses du système d’information? Sera-t-elle hébergée sur site, dans le Cloud ou un peu des deux (hybride)? Sera-t-elle développée en interne ou sera issue de la configuration d’un progiciel sur site ou d’un service en ligne? https://lucbories.com/wp-content/uploads/2021/11/Type-de-Backends-600x400-2.png\nQuelques types de backend L’application peut ainsi prendre plusieurs formes dont:\nmonolithique\n3-tiers : frontend / backend / base de données n-tiers: hautement distribuée serverless: l’application ne gère plus de serveur, elle utilise des ressources en ligne et appel des API spécialisées pour exécuter des traitements. microservices: ensemble de micro-applications centrées chacune sur un domaine fonctionnel, dont les évolutions sont indépendantes les unes des autres et qui dialoguent entre elles à l’aide contrats (message, API, WS). Par ailleurs, chacune des briques peut être un progiciel, un développement interne, un mixte des deux.\nEn outre, les traitements et données sont hébergés soit dans un centre de données de l’entreprise, au sein d’une infrastructure dans les nuages (cloud), sont mixtes entre le datacenter et le cloud (hybride) ou font appel à des services en ligne (SaaS).\nUn autre aspect important concerne la gestion des données: comment les organiser, les stocker, les sauvegarder, les archiver, les interroger, les agréger…\nLà encore, les besoins métier vont influer sur le choix en particulier: le volume de transactions, la charge et la fréquence des traitements, le niveau de sécurité et de résilience, le choix du frontend ainsi que le nombre et la localisation des utilisateurs vont être déterminants. Ensuite, la culture de l’entreprise, le budget, les projections et l’expérience des personnels vont finir de sceller le choix.\nMais une application ne vit généralement pas de manière isolée en autonomie complète. Elle a besoin d’échanger des informations avec les autres systèmes de l’entreprise, les fournisseurs, les partenaires, les filiales, les sites, les applications financières et administratives… C’est pourquoi le choix de l’intégration est tout aussi important pour la réussite du projet.\nLe choix pour l’intégration # Une application ne vit que très rarement isolée de manière autonome. Elle a de plus en plus souvent besoin d’échanger des données avec d’autres applications de nature différente, à l’intérieur ou à l’extérieur de l’entreprise. Là aussi le choix de l’architecture d’intégration sera déterminant sur les possibilités, les performances, la sécurité et la rapidité de déploiement des intégrations.\nEn outre, une technologie d’intégration ne répondra pas forcément à tous les besoins selon la nature synchrone ou asynchrone des échanges ainsi que selon le volume et la fréquence des communications.\nPour déterminer quelles solutions adopter, il est nécessaire de faire l’inventaire des flux avec pour chacun un certains nombre de critères: source, destination, synchrone/asynchrone, fréquence, volume des échanges, nature des données échangées, besoin de reprise après échec, temps de latence acceptable entre l’émission et la réception, besoin de gérer des transactions sur les données, besoin d’orchestrer des flux entre eux, besoin de transformer les données, besoin de faire du transcodage entre les systèmes…\nConclusion # Pour répondre à la question « quelle architecture applicative en 2021? », il est important de prendre en compte tous les éléments ci-dessus. Attention à la tendance naturelle à privilégier les facteurs qui nous sont plus familiers tels que la technologie ou les interfaces utilisateurs par exemple, au détriment des autres éléments essentiels, parfois moins attrayants. Une Architecture Applicative n’a de sens qu’en prenant l’application dans son ensemble, au sein de son écosystème.\nCe travail est souvent plus guidé et rigide dans un grand groupe où les marges de manœuvre sont réduites pour les choix architecturaux des applications. Mais dans les structures moyennes ou plus petites, il est encore possible de définir tous les tenants et aboutissants pour faire les bons choix. Alors à vous de jouer!\n","date":"5 août 2021","externalUrl":null,"permalink":"/posts/quelle-architecture-applicative-choisir/","section":"Posts","summary":"\u003cp\u003eLe choix d’une Architecture Applicative est une décision déterminante en ce qui concerne l’organisation des équipes, les méthodes de travail, les technologies à utiliser, les compétences à acquérir, les interactions avec les utilisateurs internes, les clients et les partenaires… Alors quelle architecture applicative en 2021?\u003c/p\u003e\n\n\u003ch2 class=\"relative group\"\u003ePréambule \n    \u003cdiv id=\"préambule\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline\" href=\"#pr%c3%a9ambule\" aria-label=\"Ancre\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eCet article n’est pas orienté sur des choix technologiques ou des fournisseurs mais plus sur des choix architecturaux. En effet, il existe tellement de solutions techniques existantes dans tellement de cas de figure différents que nous ne pourrons pas en faire le tour avec un seul écrit. De futurs articles traiteront donc des sujets technologiques qui sont tout aussi importants.\u003c/p\u003e","title":"Quelle Architecture Applicative choisir","type":"posts"},{"content":"Au delà des termes qui peuvent varier d’une organisation à une autre voir même d’une méthodologie à l’autre, il est important de comprendre ce qui définit l’Architecture Technologique ou Architecture Technique et ce qui la différencie de l’Expertise Technique.\nEn effet, identifier les périmètres de responsabilité permet de gagner en efficacité et de ne pas mélanger les notions en s’adressant aux bonnes personnes.\nIl est donc nécessaire de différencier les rôles de gouvernance des rôles d’implémentation. Chacun à son importance et les deux peuvent se trouver au cours d’une même carrière.\nAu sein de l’Architecture d’Entreprise, l’Architecture Technologique est orientée fonctionnalités (persistance des données, exécution d’une charge de travail associée à un processus…). Elle vise à organiser, standardiser et gouverner l’usage des technologies dans la mise en oeuvre de l’Architecture Applicative.\nA contrario, l’Expertise Technique est orientée équipements ou produits (serveurs Unix, serveurs Windows, Cloud AWS, base de données SQL MariaDB…). Les documents d’architecture associés visent à détailler précisément l’implémentation des technologies: la construction, l’installation, la configuration, les interactions entre équipements, la maintenance…\nLes rôles et métiers associés à l’Architecture Technologique # Dans le langage commun, en particulier dans les annonces d’emploi, il est courant d’assister à une confusion autour du terme d’Architecte Technique.\nCe rôle consiste à:\napporter et maintenir une vision technologique, comprendre les besoins de l’entité, porter l’emphase sur l’objectif métier (d’affaire), analyser les requis fonctionnels et fournir des solutions techniques. Selon la taille de l’entité, l’Architecte Technologique ou Architecte Technique peut apporter son expérience pour la motivation et la gestion de l’équipe ainsi que pour l’organisation des activités.\nParfois le rôle d’Architecte Technologique ou Architecte Technique est assumé par le Directeur Technique qui outre les aspects architecturaux assure un rôle d’encadrement et de décision stratégique.\nLes livrables de l’Architecte Technique # Quel que soit le rôle utilisé, un des principaux livrables de l’Architecte Technologique ou Architecte Technique est le Dossier d’Architecture Technique ou DAT. Ce document peut prendre différentes formes selon le contexte et son contenu dépend du périmètre du rôle de l’architecte.\nL’objectif du DAT est de fournir les points d’attention et les décisions d’architectures relatives à un ensemble de besoins de l’organisation d’un point de vue tactique. Le DAT sert aussi de à décrire le travail à réaliser et sert de support de communication entre les différentes équipes.\nPour cela, le DAT part des besoins fonctionnels (le contexte) et non fonctionnels (contraintes techniques) pour les aborder sous quatre couches:\nune représentation fonctionnelle: quelles sont les actions des utilisateurs, comment les données circulent? une représentation applicative: comment la mise en oeuvre des briques applicatives répond aux besoins fonctionnelles? une représentation infrastructure: quelles sont les ressources techniques qui entrent en jeu et comment interagissent-elles? une représentation opérationnelle: comment les ressources techniques s’insère dans les opérations TI en place? Une fois le DAT construit, il est courant de le voir passer en revue soit lors d’un comité d’architecture technique, soit par un ou plusieurs autres architectes hors comité. D’autres livrables spécialisés participent à l’activité de l’Architecte Technologique, comme par exemple:\nL’Architecture Réseau représente chaque élément adressable par un nœud et des liens entre ces nœuds matérialisent les liens physiques, les protocoles de communication permis, les plans d’adressage la nature des données échangées. La notion de sécurité et de routage peut se superposer sur le schéma pour spécifier la position et le rôle des éléments de sécurité (pare-feu, passerelle, proxy…).\nEn fonction de sa complexité, l’Architecture Réseau peut comporter différentes vues tel que: une vue globale réseau et/ou sécurité, une (des) vue(s) détaillée(s), une vue par protocole, une vue par domaine métier…\nDes documents complémentaires décrivent, entre autres, le plan d’adressage, le routage, les translations d’adresse, les règles de sécurité (filtrage par adresse IP/port, par utilisateur ou par contenu).\nL’Architecture Systèmes/Serveurs regroupe l’ensemble des serveurs par domaine métier / application, par technologie, par zone réseau ou par site. Sous forme d’un document graphique, d’un inventaire et/ou sous forme de fiches de référence. Des relations entre les serveurs peuvent décrire les flux techniques ou applicatifs.\nLe schéma pourra être agrémenté avec des informations plus ou moins détaillées sur la configuration ou le contenu des serveurs. Des documents connexes décrivent aussi l’installation et la configuration des différentes couches (hyperviseur, OS, partition, middleware, applications…) des systèmes (équipement physique ou virtuel).\nL’Expertise Technique et l’Architecture Technique sont deux piliers indispensables dans la concrétisation de l’Architecture d’Entreprise. L’un et l’autre travaillent de concert.\nAinsi les standards technologiques de l’entreprise sont établis et mis à jour: choix d’implémentation, choix d’équipement, choix de logiciels, méthodes de configuration et d’utilisation, etc. En outre, les briques technologiques sont cartographiées et justifiées.\nDe même, la gouvernance, les choix, les standards et l’implémentation des technologies sont capitalisés. Cela procure un avantage appréciable lors de la monté en compétence d’un nouvel entrant dans la sphère de l’architecture et des technologies.\nL’Architecture Technologique ou Architecture Technique apporte une gouvernance de l’usage des technologies au sein de l’organisation, entreprise ou administration.\nL’Expertise Technique apporte une connaissance fine des technologies, des conseils d’utilisation et d’implémentation.\nUtilisés ensemble et à bon escient, architecture et expertise garantissent une utilisation opportune, efficace et sécuritaire des technologies.\n","date":"12 octobre 2020","externalUrl":null,"permalink":"/posts/architecture-technologique-ou-architecture-technique-vs-expertise-technique/","section":"Posts","summary":"\u003cp\u003eAu delà des termes qui peuvent varier d’une organisation à une autre voir même d’une méthodologie à l’autre, il est important de comprendre ce qui définit l’Architecture Technologique ou Architecture Technique et ce qui la différencie de l’Expertise Technique.\u003c/p\u003e\n\u003cp\u003eEn effet, identifier les périmètres de responsabilité permet de gagner en efficacité et de ne pas mélanger les notions en s’adressant aux bonnes personnes.\u003c/p\u003e\n\u003cp\u003eIl est donc nécessaire de différencier les rôles de gouvernance des rôles d’implémentation. Chacun à son importance et les deux peuvent se trouver au cours d’une même carrière.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eAu sein de l’Architecture d’Entreprise, l’Architecture Technologique est orientée fonctionnalités (persistance des données, exécution d’une charge de travail associée à un processus…). Elle vise à organiser, standardiser et gouverner l’usage des technologies dans la mise en oeuvre de l’Architecture Applicative.\u003c/p\u003e","title":"Architecture Technologique Ou Architecture Technique Vs Expertise Technique","type":"posts"},{"content":"","date":"4 octobre 2020","externalUrl":null,"permalink":"/tags/architecture-de-donn%C3%A9es/","section":"Tags","summary":"","title":"Architecture De Données","type":"tags"},{"content":"L’Architecture de Données est une des composantes de l’Architecture d’Entreprise. Elle se concentre sur les règles de gestion et d’organisation des données.\nAttention à ne pas confondre la définition des pratiques relatives aux données et son application qui sera appliquée par des rôles plus techniques; ni avec le Directeur des Données ou Chief Data Officer rôle de direction de l’entreprise qui traite de manière globale tout ce qui touche aux données.\nL’importance d’une Architecture de Données exhaustive et mise à jour est de plus en plus cruciale. En effet, les données sont collectées, transformées, stockées et échangées à un rythme croissant.\nPar conséquent, elles deviennent un actif majeur et sensible de nombreuses entités: entreprises, organisation ou structure publique. Il est donc capital de s’assurer d’un bon référencement des données ainsi que de leur découpage fonctionnel par domaine applicatif afin de nommer des acteurs, des processus et des responsabilités.\nEn outre la mise en oeuvre de réglementations de protection des données personnelles telles que le RGPD en Europe (Règlement Général sur la Protection des Données, entré en vigueur le 25 mai 2018), CCPA en Californie (California Consumer Privacy Act, entré en vigueur en janvier 2020) apporte de nouvelles exigences.\nEn terme de gouvernance, l’Architecture de Données établit les principes directeurs de la gestion des données ainsi que les typologies de mise en oeuvre ou d’utilisation.\nElle s’opère en étroite collaboration avec les référents fonctionnels, ceux du développement, de l’infrastructure, de la sécurité et des bases de données.\nEn terme de conformité, les règles édictées permettent de s’assurer du respect des réglementations en vigueur ainsi que de l’auditabilité des accès aux données sensibles.\nEn terme de qualité de données, les normes de modélisation, de conversion et de transformation, associées à l’usage de données de référence permettent de maintenir une uniformité, une cohérence sémantique, une identification des actifs de données ainsi que des responsabilités associées.\nPrincipes de l’Architecture de Données # Les principes apportés par l’Architecture de Données concernent:\nla localisation géographique des données (dans quel pays, sur quel site, chez quel fournisseur) la localisation physique des données: centralisation ou distribution (serveur, baie de stockage, service Cloud…) le découpage par domaine métier et le découplage des applicatifs: replacer les données au cœur d’un ensemble de fonctionnalités et faire en sorte que chaque application soit maître de ses données la gestion des accès et des permissions sur les données: la sécurité est la priorité numéro 1, les déboires autour des fuites de données nous montrent chaque jour l’importance d’une bonne sécurité. les processus de continuité d’activité (sauvegarde, réplication, externalisation): aujourd’hui le échanges mondiaux s’opèrent en continue 24h/24h et le temps où les applications étaient fermées à 19h pour maintenance est majoritairement révolu. L’Architecture de Données peut être menée par un Architecte de Données (Data Architect) ou faire parties des attributions d’un Architecte d’Entreprise, voir d’un Architecte Applicatif en fonction de la taille et de l’organisation.\nEn résumé, une bonne gestion des données participe à placer le client et la sécurité au centre des préoccupations. En traitant les données comme un actif principal au centre des fonctionnalités, toute l’entreprise prend conscience d’une bonne gestion des données.\nEn plus, l’entreprise ou l’organisation devient aussi plus flexible et adaptable en maîtrisant les tenants et aboutissants de ses informations.\nOutre la sécurité, la résilience est un aspect important apporté dans l’Architecture de Données et qui rassure les clients, les partenaires et les milieux économiques.\nDans un contexte de modernisation des applications ou de transformation digitale, la cartographie, la maîtrise de la transformation et du nettoyage des données sont essentielles.\n","date":"4 octobre 2020","externalUrl":null,"permalink":"/posts/architecture-de-donn%C3%A9es-ou-la-gouvernance-de-linformation-d-entreprise/","section":"Posts","summary":"\u003cp\u003eL’Architecture de Données est une des composantes de l’Architecture d’Entreprise. Elle se concentre sur les règles de gestion et d’organisation des données.\u003c/p\u003e\n\u003cp\u003eAttention à ne pas confondre la définition des pratiques relatives aux données et son application qui sera appliquée par des rôles plus techniques; ni avec le Directeur des Données ou Chief Data Officer rôle de direction de l’entreprise qui traite de manière globale tout ce qui touche aux données.\u003c/p\u003e\n\u003cp\u003eL’importance d’une Architecture de Données exhaustive et mise à jour est de plus en plus cruciale. En effet, les données sont collectées, transformées, stockées et échangées à un rythme croissant.\u003c/p\u003e","title":"Architecture De Données Ou La Gouvernance De L’information D’entreprise","type":"posts"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"}]